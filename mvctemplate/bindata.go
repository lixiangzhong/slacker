// Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// component.tpl
// controllers.tpl
// dao.tpl
// js.tpl
// markdown.tpl
// models.tpl
// service.tpl
// vue.tpl
package mvctemplate

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _componentTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\xcb\x6a\xdc\x4a\x10\xdd\xeb\x2b\x8a\xe6\x2e\x34\x17\x5b\xe3\xb5\x34\x1a\x4c\xb2\x4c\x30\x81\x2c\x8d\x17\x6d\xa9\x64\x35\xe9\x17\xdd\xa5\x49\x86\x41\x90\x6d\xc8\x97\x64\x95\x65\xfe\x28\x24\x7f\x11\xba\xf5\x18\x8d\x3d\xc6\x78\x23\x75\x55\x9f\x3a\xf5\x3a\xbd\x21\x54\x56\x72\xc2\x6d\x02\xb0\x41\x79\xe9\x51\x62\x45\x09\x00\xc0\xee\x52\x99\x1a\x65\x46\x4e\xa8\x92\x09\x6d\x3b\x62\xf1\xa2\x11\x92\xd0\xf1\x7b\x89\xd1\x74\xa8\x0c\x0d\x47\x2b\x79\x85\xad\x91\x35\xba\x92\xfd\xf9\xf9\xeb\xef\xd7\x6f\xbf\xbf\xff\x18\xa2\xae\x1b\x53\x75\xbe\x64\x0f\x48\x52\xf8\x91\x2a\x97\x86\xd7\x42\x3f\x94\x6c\x3c\x8c\xd8\xaa\xe5\xfa\x01\x4b\xd6\x72\x5d\x4b\xfc\x18\x8b\x1a\xae\x2a\x89\xfc\x98\x3b\xaf\x85\x0f\x46\x5d\xb2\xe9\x14\x60\xdb\x78\x19\xfa\x31\x96\x84\xd1\xd1\x0c\x1d\x35\xc6\x95\x4c\x10\x2a\x10\x1a\x8e\x65\x00\xe4\x9f\x70\x3f\xdc\x64\x87\x43\xf6\xc1\x09\xc5\xdd\xfe\x1d\xee\xdf\x1a\xd9\x29\x9d\x0d\xbf\x1b\xae\xb0\xef\xe7\x10\xc9\xef\x51\xbe\x36\x68\xc7\x65\x87\xaf\x0a\xda\x6e\xd6\x73\x23\x71\x4d\xeb\x79\x4f\xdb\x64\xb3\x3e\x6e\x30\xd9\xf8\xca\x09\x4b\x01\x24\x94\x35\x8e\xe0\x7f\xe0\x1e\xb8\x15\xd0\x38\xa3\x80\x5d\xaf\xb9\x15\xeb\xc3\x21\x1b\xf9\x8b\x04\x00\xbf\x44\x64\x8d\x0d\xef\x24\xc1\x21\xe6\xac\x39\xf1\x74\x35\x1a\x61\xc5\xd4\x39\x3d\x9b\x00\xe3\xb6\x72\x68\xb8\xf4\x78\x31\xfb\xa3\x4a\x72\x60\xec\xe8\x0a\x53\xce\xe1\xf6\x6e\x74\xf4\x45\x3c\xf4\x03\xc0\x3a\x63\x7d\x0e\x07\x88\x63\xc9\xe1\xa6\x53\xf7\xe8\x2e\x60\x5a\x66\x0e\x6f\x8c\x91\xc8\xf5\x14\xa0\x90\x5a\x53\x87\x90\x91\x6f\xa9\x90\x74\xb7\x5a\xd4\x28\x1a\x48\x69\x6f\xd1\x34\xb0\x83\xb2\x04\xa6\x23\x39\x5b\x62\x00\xa8\x15\x3e\xfb\x0f\x95\xa0\x74\xd4\xf8\x05\xec\x56\xc5\x33\x88\x41\x97\x8f\x20\x3d\xa0\xf4\xf8\x22\xeb\xd5\xcb\xac\x4b\x48\x3f\x0d\x6c\x1a\xe5\xf8\x70\xd2\x65\xfd\x91\x65\x5c\x06\x94\x40\xae\xc3\x23\x03\xb7\x62\x91\x30\x7b\x1f\x83\x97\x1e\x6a\x51\xa7\xce\x5b\x28\xb7\x27\xd5\x4f\xbc\xc2\x13\x94\xe0\xbc\xcd\x82\x1e\xe2\x67\xd9\x42\x7f\x42\x56\x71\xaa\xda\x14\x9d\x8b\x6c\xfd\xd3\x44\xe9\xea\xb9\x3c\x73\xfd\x51\x4d\xa7\x29\x8a\xc7\x63\x10\x5a\x9c\x9b\xc1\x50\xeb\xed\x5d\x71\xea\x8f\xc3\x0f\x93\x09\x46\x14\x59\x71\x2a\x90\xd9\x0f\x5b\xb8\x3a\x23\x8d\x79\xea\x67\x36\xb3\x54\xf2\xe7\xd0\xfe\x51\x96\xa3\x9e\x9b\x4e\x57\xe1\xdd\x3e\x2d\x78\x68\xa3\x38\x47\xa5\x4c\xa7\x09\xeb\x45\xcc\x93\x88\x80\xef\x8b\x64\xb3\x9e\x5e\x7c\xf2\x2f\x00\x00\xff\xff\x50\xb4\x2e\x04\xca\x05\x00\x00")

func componentTplBytes() ([]byte, error) {
	return bindataRead(
		_componentTpl,
		"component.tpl",
	)
}

func componentTpl() (*asset, error) {
	bytes, err := componentTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "component.tpl", size: 1482, mode: os.FileMode(420), modTime: time.Unix(1569292443, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _controllersTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x57\xcf\x6f\xdb\x36\x14\x3e\x8b\x7f\xc5\x9b\x0e\x83\x14\x68\xd2\x36\x14\x3d\x78\xd0\xa1\x71\x83\xb6\x5b\x90\x7a\x73\x7a\x2a\x7a\x60\xc8\x17\x85\x88\x44\xb9\x8f\x54\x3a\x43\xd3\xff\x3e\x50\xb6\xd7\xc8\x16\x95\x6c\x31\x90\xf5\x26\x58\xfc\x3e\x7e\x3f\x48\x91\xce\xb2\x37\xa8\x91\xb8\x45\x09\x57\x6b\x30\x25\x17\xb7\x48\xc0\xb2\xac\x50\x1a\xa8\x6e\x2c\x12\xcb\x4e\x18\x5f\xa9\xf4\xcd\xd9\x65\x14\x66\x6d\x9b\x9e\xd7\x5f\x90\x2e\x78\x85\x5d\x97\xcd\x94\x0c\x13\x51\x6b\x4b\x75\x59\x22\x99\xf4\x92\xdf\x62\xdb\xa6\x73\x5e\x61\x39\xe7\x06\x37\xe3\x62\x2f\xc3\x10\x7d\xae\x8c\xf5\xa1\x17\xef\x97\x0f\xc1\xe7\x84\xdc\x7a\xa7\x5f\x7c\x78\x8c\x81\x0f\x2b\x39\xc5\xf1\xea\x72\xfe\xf6\x11\x2c\x0b\x6e\xc5\x8d\x8f\xe4\xf5\xd9\xf9\xd9\xe5\xd9\x23\x58\x5e\x63\x89\xa3\x5a\x60\x42\xcc\x90\xe2\xd4\x09\xf9\x2f\x6a\x46\x68\xbc\x72\xbc\xf1\x8e\x90\x78\xf3\x05\x76\x92\x31\xb6\xe2\xe2\x96\x17\x08\xf7\x70\x8c\xa9\x6a\x55\x93\x8d\x58\x00\x61\xdb\x86\x45\x6d\x48\x64\x55\x2d\xb1\x34\xe1\x5f\x90\xbe\xeb\xdf\x9e\xab\x2b\xe2\xb4\xee\x3a\x27\x61\x3b\xfb\x00\x80\x44\xa2\x96\x38\x82\x08\x59\x10\x16\xca\xde\x34\x57\xa9\xa8\x2b\xb7\xf4\x7f\x28\x6a\xad\x84\x7b\x72\xef\x8c\x25\x51\xeb\xbb\x90\xc5\x8c\x5d\x37\x5a\xc0\xf8\x32\x8d\x04\x9c\x14\x4a\xa7\xf3\x5a\x5b\xfc\xd3\xc6\x00\x2d\x0b\xee\x38\xc1\xe7\x06\x69\x0d\xc3\x64\xd2\x25\x72\x12\x37\x2c\x10\xe9\xf2\xa6\x6e\x4a\x79\xaa\xb4\xfc\xdd\x0d\x8c\xbe\xef\xc7\xc7\x2c\x90\xdc\xf2\xc4\xd6\x96\x97\x09\x12\xcd\x72\x58\x22\xdd\x29\x81\x9e\x6d\x12\xed\x70\xbf\x2e\xdf\x5f\x44\x22\x01\x27\xe6\x6d\xcb\x82\x20\x74\x4c\xe1\x0c\xa0\x67\x74\x3f\xf4\xac\xe1\x0c\x36\xec\x2c\xe8\xdc\x0c\x31\xeb\xb6\x06\xc7\x77\xb1\xd7\xa0\xa3\xdd\xf7\x77\x08\x1f\xf5\xea\xa0\x31\x0b\x94\x4c\x00\x89\x60\x96\xc3\x36\xed\x74\xc1\xc9\xe0\x3b\x6d\x23\xe1\x1e\x79\x15\x85\x4a\x86\x71\xf2\xd3\x8f\xc9\xcb\x17\x0e\x71\xdd\x03\xbe\xcb\x41\xab\xd2\x09\xf9\xc7\xb6\x56\x7d\x5e\xae\xec\xf4\x02\xbf\x44\xbb\xe7\x53\x2e\xff\xc0\xcf\x0d\x1a\xdb\x9b\x8d\x59\x10\x10\xda\x86\x34\x0b\xba\x4d\xd8\x4e\xf4\x82\x54\xc5\x69\xfd\x1b\xae\xe7\x75\xd9\x54\x7a\xdf\x45\xae\x24\x0b\xdc\xcc\x5f\xeb\xf0\xa4\xb5\xf3\xb6\xd3\xd5\x87\x3f\x88\xd9\xf7\xbd\x7a\x72\xd0\xdb\x70\x66\x39\xdc\x8f\xbc\x17\xb2\x51\xf5\xcb\x71\xc3\xdb\x4e\xb6\x0b\xc4\xeb\xeb\xe1\x48\x7c\x9f\x87\xd1\x48\x9e\x7f\xd5\xb8\x52\x86\x7d\x3c\xb5\x9e\x21\xfc\xd8\x45\x1d\x8a\x7b\x68\xbd\x43\x0e\x87\x2b\xde\xdb\xd2\x9e\x7a\xb6\x2f\xf7\x6b\xd1\x9e\x33\xe9\x7f\xdc\x73\xd3\x9b\xbe\x56\x58\x4a\x03\x39\x54\xfc\x16\xa3\x8a\xaf\x3e\x1a\x4b\x4a\x17\x9f\x94\xb6\x48\xd7\x5c\x60\xdb\xc5\xd3\x15\xdf\x27\x3a\x6e\xc1\xb0\x5f\x94\x2f\x65\x25\x93\x81\x8a\x89\xa2\x7c\xa7\xfe\x58\x53\x00\x00\x4f\x2e\x0b\x8e\x1d\x82\xd7\x81\x92\x1e\xe3\xd9\xc9\xc6\x3b\x4c\xde\x7b\x0e\x12\xe8\x97\xaa\xd9\x3a\x57\xba\x30\x3f\x2b\x6d\x5f\xbe\x30\x91\x48\xfb\xe3\xee\x15\x11\x5f\x6f\xcc\xc7\x9b\xa1\x39\xf0\xd5\x0a\xb5\x8c\x94\x34\xc9\x43\xa8\x8f\x9f\xc2\x38\x4e\xd3\x34\x86\x83\x2f\xee\xb4\x4e\x35\xdd\x30\x4c\x5d\x12\xc7\x4c\x7e\x23\xbb\xe1\x79\xdb\xf0\x6f\x3d\x93\xc0\x63\x37\x1f\x4c\xde\x99\x7d\xdd\xfc\xdb\x13\x09\x8e\x7a\x24\x3d\x47\x07\xe3\x15\x78\x73\x73\x1b\x02\xc6\x62\x77\x7f\x42\xfe\x0e\x00\x00\xff\xff\x00\x5b\x97\x6f\x15\x0f\x00\x00")

func controllersTplBytes() ([]byte, error) {
	return bindataRead(
		_controllersTpl,
		"controllers.tpl",
	)
}

func controllersTpl() (*asset, error) {
	bytes, err := controllersTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "controllers.tpl", size: 3861, mode: os.FileMode(420), modTime: time.Unix(1592901723, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _daoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x95\x51\x6f\xfa\x36\x14\xc5\x9f\xe3\x4f\x71\x97\x07\x94\x54\xc8\xd9\x5f\x9a\xf6\x50\x09\x4d\x2a\x6d\xa7\x6a\xb4\x2a\xa5\xd5\x1e\xaa\x6a\x72\xe2\x0b\x78\x24\x31\xb5\x9d\x52\xe6\xe5\xbb\x4f\xb6\x09\x83\xc2\x06\xff\xa7\x10\x71\xaf\xef\x39\x3f\x1f\x3b\x59\xf6\x2b\xd6\xa8\x98\x41\x0e\xf9\x1a\x74\xc9\x8a\x05\x2a\xb2\x64\xc5\x82\xcd\x10\x38\x93\x84\x88\x6a\x29\x95\x81\x04\x48\x14\x5b\x1b\xcf\xa4\x56\x45\x56\x49\x8e\xa5\x8e\xff\x06\x7a\xe7\xff\x1e\x89\x5c\x31\xb5\x6e\xdb\xcc\x5a\xfa\xc0\x2a\x6c\xdb\x98\x44\xf1\x4c\x98\x79\x93\xd3\x42\x56\xd9\x9f\xa2\xfe\x6b\xde\x64\x33\xa9\xaa\x98\x58\x2b\xa6\x40\xef\xf4\x8b\x46\xf5\xcc\xf2\x12\xdb\x96\x44\xb1\x36\x4a\xd4\x33\xed\x1a\x39\x33\x2c\x67\x1a\x33\xfd\x5e\xba\x72\xac\xb9\x2b\x49\x09\x99\x36\x75\x01\x09\x87\x8b\x6b\x26\x53\x18\x09\x6d\xac\xa5\x43\x56\x61\x39\x64\x1a\xc3\xe8\x64\x35\x47\x85\x00\x94\x52\x57\x9e\x5c\xb8\xa9\xf4\xfa\x2a\xdd\xfe\x80\xe4\xf5\xcd\x5a\x3a\x92\x2b\x54\xa1\x87\x1e\x2e\xd3\x47\xa5\xa4\x4a\xc1\x12\x00\x80\x0f\xa6\xc0\xc9\x82\x41\xc5\x16\x78\x56\xff\x8f\x29\x89\x50\x29\xb8\x1c\x70\xea\x27\xdf\x3b\x6c\xc9\xc9\x46\xdb\xa6\x74\x52\xc8\x25\xea\xe0\x84\x52\x9a\xd2\x5b\x51\xf3\xa4\xe7\x14\xa4\xf4\xc6\x09\xf3\xaa\x14\x9a\x46\xd5\x5e\x98\x93\x4b\x5a\x42\xac\xa5\xf7\x68\xe6\x92\x3f\xb3\x85\x03\xfb\x05\xd9\x50\x21\x33\x78\x04\x9a\x37\x77\x71\x52\x5c\x0a\x1e\x8b\x25\x10\xed\x29\x08\x0e\xc3\xea\xc9\xae\xcc\x03\x05\x2f\x4b\xfe\x3f\x0a\xce\x15\x00\x96\xb8\xf9\x59\x06\x7f\xf4\x03\x64\xe0\x94\xe7\x3e\x7d\xfc\xe6\x13\x8b\x24\x6e\xfc\x20\xd8\x46\x12\x34\x9a\xee\x8d\x4f\xc6\xa3\xb6\x85\x90\x14\x6b\xe9\xa3\x12\x15\x53\xeb\xdf\x70\x3d\x94\x65\x53\xd5\x34\x3c\x42\xe3\xe0\xf2\x54\x45\xdc\xf7\x96\x77\x89\x74\x48\x26\xec\x03\xf7\x37\xee\x80\xc8\x23\x33\xc5\xfc\x08\x10\xc1\x41\xd4\xe6\xe7\x9f\xfa\x1b\x27\x15\x5b\xbe\x86\x53\xf2\x26\x6a\x83\x6a\xca\x0a\xb4\x3b\x40\x00\x08\x40\xb4\x4d\xea\x49\x94\xae\xda\x55\xd2\xa3\xf6\xf6\x6b\x07\x82\x03\x89\xf6\x77\x3b\xe4\x39\x58\x0b\xbb\x1a\x7a\x75\x12\x04\xef\x18\xfe\x37\x96\xd7\x58\xa2\xf1\xc1\x24\xc7\x2e\x02\xf8\x0a\xc7\xc5\xf8\x50\xfa\xd5\xda\x3d\xbf\x33\xb4\x60\x81\x6c\x0d\xbb\x99\x35\xab\xf0\x98\x5d\x68\x5b\x18\xc0\xe6\x42\xa2\xcf\xd2\xaf\x9e\x9c\xd9\x99\x02\x74\xe7\xbe\x03\xf5\xbb\x8b\x59\x12\x1f\xe9\xdd\x66\x08\xda\x76\xf0\x4b\x88\xd1\x39\x33\xe8\xad\x50\xda\xec\x1d\xb4\x6e\x73\x60\x73\x11\xec\x63\x3c\x84\x72\xa7\x6f\x3e\x85\x36\x49\xb3\x19\xb5\xf1\x9b\x42\x2e\x65\x09\x96\x44\x93\xf1\xc8\x79\x88\x35\x96\x58\x18\xf8\x06\x53\x25\xab\x9d\xe3\xb4\x3d\x3c\xff\x69\xca\x79\x82\x52\x54\xc2\xc0\xb7\x98\xf8\x64\xa2\x9b\xe9\x47\xec\x40\xe2\x39\x1d\x37\xa8\xd6\x4f\x72\x95\x4c\xc6\xa3\x7e\x27\xc9\xdd\x83\xac\x4e\x7a\xbe\x29\x25\x91\x98\x3a\x73\xf0\xc3\x00\x6a\x51\x42\xaf\xd7\xbd\xe9\xf7\xd2\x41\x78\x90\x4f\x72\xa5\x9d\xf4\x8e\x85\x51\x0d\x92\xa8\xdd\xb2\xf1\x0b\x85\x5b\xd2\x7f\x53\xfe\x09\x00\x00\xff\xff\xbf\xa5\x8a\x8a\x02\x07\x00\x00")

func daoTplBytes() ([]byte, error) {
	return bindataRead(
		_daoTpl,
		"dao.tpl",
	)
}

func daoTpl() (*asset, error) {
	bytes, err := daoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dao.tpl", size: 1794, mode: os.FileMode(420), modTime: time.Unix(1592897881, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _jsTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x55\x4d\x6f\xd3\x40\x10\xbd\xfb\x57\x8c\x56\x39\x38\xd0\xda\xf7\x54\x16\xd0\x0f\x10\x52\x85\x2a\x68\xe1\xd8\x4c\xec\x09\xb1\x62\xef\x9a\xdd\x71\x43\x65\xf9\xbf\xa3\x9d\x75\x14\x20\x8e\xa5\xf6\x52\x6b\x77\xde\xbc\xf7\xf6\x4d\x77\x93\xa6\x00\x9f\x48\x93\x45\xa6\x02\x56\xcf\xe0\x2a\xcc\xb7\x64\xa3\xb2\x6e\x8c\x65\xd8\x30\x37\xb0\xb6\xa6\x06\x95\xa4\x7e\xa1\x2e\xa2\x7d\xcd\xb1\xb1\x34\x14\xdf\xa7\xb2\xfa\xab\xfa\x06\xd0\x41\x6e\xcc\xb6\x3c\x60\x5a\x2e\x2b\x97\x86\x4d\x0f\xa5\xdf\x02\x5d\xb7\x3a\xe7\xd2\x68\xb8\xc7\x2d\xc5\x65\x31\x87\x2e\x02\xb0\xc4\xad\xd5\xe2\x20\xf9\x49\x1c\x2f\x53\x6c\xca\xb4\xeb\x92\x5b\xb3\x23\xfb\x05\x6b\xea\xfb\x74\xd6\x95\x45\xbf\x9c\x5f\x44\xfd\x31\xdb\x6d\xe9\x38\xfe\xd5\x92\x7d\x1e\x27\x54\x23\x84\xea\x4c\xa0\x00\x0d\x5a\xac\xdd\x02\xa4\x3f\x02\xe8\xc7\x35\xae\x2c\x21\x53\xbc\x32\xc5\x88\x48\x63\xdc\x49\x15\xe9\x18\xa5\x7c\x68\x0a\x4f\x59\x16\x03\xe8\x98\xb6\x9d\x0c\x63\x8a\xfb\x0e\x39\xdf\x4c\x51\x4b\xfd\x95\xe4\xd7\x54\x11\x8f\xcf\xaf\x08\xa5\x17\x8f\xf0\xd2\xfb\x19\x78\x4f\x4c\x72\x82\x7a\xf9\xc2\x61\x8a\x5a\x88\x48\x90\x2f\x4f\x69\xc8\xe7\x35\xba\xc3\xd8\xa7\x85\x4f\x4c\xfe\x75\xb2\x9f\xe5\xa2\xc6\xeb\xb2\xa2\x20\xf5\x84\x16\xd6\xc6\xd6\x90\x81\xa6\x1d\x7c\x34\xb6\xbe\x46\xc6\x78\x7e\x11\x81\x14\x12\x6c\x1a\xd2\x45\xac\x7c\x8f\x3a\x03\xff\x09\x7f\x13\x8d\x35\x09\xee\xe8\x02\x04\xc3\xe1\x55\x38\xf6\xed\x69\xf7\xbe\x37\x84\x05\x59\xb7\x18\x96\x00\xea\xca\x68\x26\xcd\xe7\xf7\xcf\x0d\xa9\x05\xa8\xba\xad\xb8\x6c\xd0\x72\xea\xfb\xce\x0b\x64\x54\x82\xed\x4f\x1f\xf3\x46\xd6\xf1\xe1\x88\xad\xad\x20\x0b\x41\x59\x93\x93\x73\x09\xe9\xa7\xe4\xfb\xc3\xcd\xe3\x87\xbb\xbb\xc7\x4b\x74\xf4\xf0\xf5\x16\xde\x0a\x22\xdc\xde\x40\xf9\x9f\xf9\x77\x98\xfb\xe6\x47\x36\x5b\xd2\x99\x1a\x1a\xe4\x19\x4c\x1c\x23\x53\x22\x15\x9f\x49\x65\x72\xf4\x5e\x92\x8d\xa5\x35\x64\xde\xc1\xa8\xd5\x1f\xb4\xfa\x66\xf2\x2d\xed\xdd\xe6\x46\x3b\x06\xa1\x81\x6c\x78\x4c\xfd\xd3\x75\xef\x77\xc2\x58\x2a\x62\xd8\x18\xc7\x90\x81\x52\x7e\xa3\x5c\x43\x3c\x75\xae\xcc\x03\xe7\xfb\xc4\x43\xe7\x72\xe7\x16\x69\x3a\xeb\x0e\x3e\x8d\xe3\x7e\xe9\xe9\x7a\xa0\xca\xd1\xbf\xf0\x09\xfa\xc4\x52\x53\x61\x4e\xb1\x92\x1f\x8b\x33\x50\x3b\xa7\xc4\x68\x7f\xf8\xdf\x58\xce\x3a\x11\x90\x6c\x77\xb4\x72\x72\xe6\xc9\x78\x67\x9d\x7c\xbd\xa7\x3e\xfa\x13\x00\x00\xff\xff\xc7\x4e\x02\x78\xb5\x06\x00\x00")

func jsTplBytes() ([]byte, error) {
	return bindataRead(
		_jsTpl,
		"js.tpl",
	)
}

func jsTpl() (*asset, error) {
	bytes, err := jsTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "js.tpl", size: 1717, mode: os.FileMode(420), modTime: time.Unix(1578994132, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _markdownTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x52\xcd\x6e\xd3\x4c\x14\xdd\xcf\x53\x5c\xb9\xd5\xb7\x4a\xeb\xae\x2d\xd5\xdf\xa2\x0b\x36\x88\x15\x62\x01\x42\xaa\x89\xa7\x25\xd4\x3f\xc5\x76\x84\xa2\xc9\x48\xa1\x0a\x10\x14\x9a\x54\x22\x2d\x25\x25\x85\x40\x52\x75\x43\x1a\x24\x0a\x6d\x1c\xda\x97\xf1\x8c\x9d\xb7\x40\xf6\x38\x28\x81\x12\x58\x30\xab\xb9\x47\xe7\x9e\x73\xee\xcc\x95\xe5\x6b\xd8\xc2\x8e\xe6\x61\x1d\xee\x15\xc0\x35\xb4\xec\x06\x76\xd0\x1c\x10\xb2\x78\x43\x33\x31\xa5\x88\x7d\x7c\xc5\x7b\xa7\x6c\x67\x1b\x8a\xc0\x4a\xc3\xf0\x93\xcf\x0e\xab\x50\x84\xe8\xe4\x33\xdf\xaf\xa1\x85\xf1\x29\x2e\x5c\x75\x45\x84\x38\x9a\xb5\x8e\x61\x3e\x97\x99\xcf\xda\x86\xb2\xbc\xb8\x62\x1b\x79\xd3\x72\x29\x05\x42\x62\x28\x05\x84\x1d\x14\xc7\xe8\xcd\xc2\xe6\x54\xbd\x62\x9b\x26\xb6\x3c\x4a\x11\x21\xd8\xd2\x29\x45\x68\x6e\x0e\x1e\xb8\xb6\x15\x76\x06\xc1\x45\x15\xad\xae\xae\xc6\x15\x22\x33\x3d\x01\x40\xba\xc2\x57\x52\x52\xf0\x36\x76\xec\x5b\x9a\x91\xc7\x94\x66\x7e\x38\xd1\x58\x3c\xf1\xe3\xb5\x2e\xab\x7f\x88\x2e\x1b\xec\xe0\xf0\x17\xdf\x44\x3c\x6b\xeb\x58\x52\x96\x32\xa2\x32\xb1\xeb\x6a\xeb\x58\x52\x24\x7b\x43\x4a\x31\x5d\xf3\x34\x49\x11\xf4\x7f\x16\x55\x88\x89\xb8\xf1\x7d\x32\x34\xab\x1c\x30\x7f\x00\x48\x85\x4d\xdb\xf5\x92\x37\x03\x56\xe9\x83\xac\x6d\xe6\x64\x42\x16\xaf\xdb\x8f\xb0\x93\x7e\x77\xc2\x7f\x72\x2c\x7e\x3d\xb8\xec\xf1\xc6\x79\xdc\x97\x9f\xdd\x26\x2b\x39\x1d\xc4\x03\xbd\x78\xc6\x7a\xcd\xc9\xf6\xc4\x57\xf3\xb2\xf7\xff\x42\x41\x55\x21\xb8\xa8\xb2\xa3\x2d\x48\x5b\x88\x34\x7a\x53\x8a\x8e\x1e\x0b\xa9\xb0\x59\x16\xca\x92\xc2\x4a\x43\xfa\x87\x34\x62\xf4\x77\xa3\xd7\x1d\xa4\x82\x8e\x0d\xec\xe1\xdf\xb3\x21\x66\x47\xb5\xaf\xac\xbe\x17\x9c\x95\x78\xab\x8d\x54\x58\xc7\xde\xec\x61\x05\x9f\x75\x9a\x33\xf9\x48\x05\xfe\xb6\x1b\x9d\xbc\xe7\xad\x76\xe0\x7f\x09\xfc\xee\xc3\x3c\x76\x0a\xac\xbe\xc5\x77\xfb\x7c\xef\x9c\x0d\xeb\xa1\x5f\x66\x3b\x95\xcc\xc8\xdf\x8f\x7a\x9d\xff\xed\xb5\x35\x17\x7b\xcb\x4b\xff\x19\x39\x33\xe7\x2d\x2f\x21\x15\xa9\x20\x76\x0e\xa9\x30\xde\x37\x15\x08\x52\x61\x7a\xe7\xd2\xfa\xa7\xad\x4b\xd1\xf1\xde\x89\x32\x81\x3c\xdb\xd3\x8c\xb8\x13\x64\x99\x7d\x7b\xc9\x9e\x6f\x4f\x25\x3d\xab\x86\xcd\x32\x2f\xf9\xbc\xd5\xe6\xbb\xfd\x4c\xd8\x38\x0e\x06\x35\x56\x79\x3a\x6a\x9f\x4e\xaa\x08\xe1\x3b\x77\x53\x2c\x1e\x98\x8a\xa0\xdf\x03\x00\x00\xff\xff\x2c\x19\x42\x29\x60\x04\x00\x00")

func markdownTplBytes() ([]byte, error) {
	return bindataRead(
		_markdownTpl,
		"markdown.tpl",
	)
}

func markdownTpl() (*asset, error) {
	bytes, err := markdownTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "markdown.tpl", size: 1120, mode: os.FileMode(420), modTime: time.Unix(1563850859, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _modelsTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x93\x4f\x8b\xdb\x3c\x10\xc6\xcf\x9e\x4f\x31\x98\x3d\xd8\xb0\xaf\xf5\x16\x4a\x0f\x0b\x29\x94\x2d\x94\x6d\xbd\x9b\x06\x6f\x4f\xa5\x10\xc5\x9e\x38\xda\xb5\x24\x57\x92\xd9\x06\x55\xdf\xbd\xc8\x76\x42\x9a\xcd\xa1\x37\x3f\xf3\x47\xcf\xfc\x66\x30\x63\x9f\x48\x91\xe1\x8e\x1a\xdc\xec\xd1\x76\xbc\x7e\x26\x03\x8c\x39\xbe\xe9\x08\xbd\x2f\x1e\xb8\xa4\x10\x80\xb1\x6a\x55\x02\x63\xde\x17\x95\x6b\xaa\x55\x39\xc6\x62\x32\x0a\xfc\xef\x3d\xb6\xc2\xed\x86\x4d\x51\x6b\xc9\x9e\xa4\x16\x46\x2b\x66\x7f\x76\xbf\xa6\x9e\x43\xe1\xd8\x75\xab\xbb\x41\x2a\x3b\xbf\xb6\x2a\x67\x1d\x02\xf4\xbc\x7e\xe6\xed\xe8\x5b\xea\x17\x32\xb3\x39\x08\xd9\x6b\xe3\x30\x83\x24\xf5\x3e\x6d\xb5\x35\x35\x93\xba\xa1\xce\xa6\xbf\xb1\xb8\x1b\xb3\xa5\xd8\x18\x6e\xf6\x21\xa4\x90\x78\x2f\xb6\x58\xdc\xd9\x6f\x96\xcc\x63\x24\x09\x01\x92\x24\x25\x55\xeb\x46\xa8\x96\x3d\x59\xad\xc6\x32\x52\x4d\x08\x90\x43\xad\x95\x75\x19\x24\x95\xe3\x8e\x96\x5f\x16\xff\xcf\x9f\x1f\xa9\x5b\xbc\x81\x1c\x60\x3b\xa8\x1a\x85\x12\x2e\xcb\xd1\xe3\xe4\x5d\x7c\x18\x9c\xbe\x17\x6d\x5c\x5f\xe6\x7d\x71\xcb\x25\x75\xb7\xdc\xd2\x34\xb6\x0f\x39\x06\x40\x70\xfb\x7e\x24\x3a\x4b\xa3\x75\x66\xa8\x9d\x07\x44\x44\xef\x0d\x57\x2d\xe1\x95\xb8\xbe\xaa\x75\x77\xb3\x28\x8e\x4b\x41\xef\x63\xe8\x55\xfb\x1c\x7e\xdc\xf7\xa7\x8a\xb7\x27\x1d\x5a\x4a\x52\x2e\x84\xd9\x62\x82\x0d\x00\x97\xd6\x33\x02\x46\x8a\x3b\x25\x9c\xe0\xdd\xe4\x7c\xee\x9a\xe3\x3d\x37\x76\xc7\xbb\xcf\xd5\xf2\x21\xcb\x31\xfb\xfe\x63\xb3\x77\x74\x8d\x64\x8c\x36\x39\x7a\x48\x46\x5c\x27\xfb\x0b\xdd\x71\xe3\x27\xef\x17\xde\x17\x5f\xb9\xb5\x2f\xda\x34\x13\xee\x2b\xc8\x05\xa6\x29\x24\x86\xdc\x60\x14\xc6\xab\x15\xb3\x7f\xe6\x64\xff\xf7\xb4\x79\x0e\x01\x0e\x90\xff\x8c\x33\xe2\x47\x91\xe5\xf1\x20\x42\xb5\xe8\xf1\xe8\x98\x1e\x7f\x80\x34\xee\x6d\x44\xab\x88\x9b\x7a\x37\x5f\x2f\x02\x5f\xe2\x5c\x6e\xb7\x96\x1c\x0e\x42\xb9\x77\x6f\x71\x1d\x27\xbf\x49\xf5\x18\x4c\x71\xab\x8d\x3c\xaa\x35\x24\xa5\x90\xe2\xbc\xb6\x8b\xb1\x43\xe9\x24\xd6\x10\x0f\xf9\x27\x00\x00\xff\xff\x55\xf4\x0b\x9e\xb2\x03\x00\x00")

func modelsTplBytes() ([]byte, error) {
	return bindataRead(
		_modelsTpl,
		"models.tpl",
	)
}

func modelsTpl() (*asset, error) {
	bytes, err := modelsTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "models.tpl", size: 946, mode: os.FileMode(420), modTime: time.Unix(1592901650, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x4d\x6f\xe3\x36\x10\x3d\x4b\xbf\x62\x22\x2c\x0a\x6b\x61\x30\x7b\x28\x7a\xd8\xc2\x2d\xb6\xde\xa0\x30\x9a\xee\x06\x48\xb6\x3d\x04\x41\xc1\x48\xe3\x98\x88\x44\x0a\x43\x3a\x5e\x83\xd5\x7f\x2f\x48\x4a\xb6\x64\x4b\xb6\x2f\xcd\x25\x0a\x39\x1f\x6f\x86\xef\xcd\xe4\xfa\xfa\x77\x94\x48\xdc\x60\x0e\xcf\x5b\xd0\x05\xcf\x5e\x91\xe2\x8a\x67\xaf\xfc\x05\x41\x23\xbd\x89\x0c\xe3\x58\x94\x95\x22\x03\x93\x38\x4a\xac\x4d\x5e\x94\xa6\xec\xba\x54\x39\x16\x3a\xf9\x17\xd8\xc2\xdf\xde\x8a\x67\xe2\xb4\xad\xeb\x6b\x6b\xd9\x17\x5e\x62\x5d\x27\x5d\x7b\x9d\xa9\x0a\x07\xcc\x93\x38\xb2\x56\x2c\x81\x2d\xf4\x37\x8d\xf4\xc0\x9f\x0b\xac\xeb\xae\x27\x12\x65\x2a\x1f\xf5\x45\x99\xd7\x75\x9c\xc6\x71\xbc\x5c\xcb\x0c\x26\x1a\xde\xdf\x07\xe0\xe9\x03\x7f\x45\x6b\xd9\x9c\x97\x58\xcc\xb9\xc6\x00\x6b\x92\x73\xc3\xe1\xbd\xb5\xec\x56\x6d\x90\xc2\x21\x3b\xb6\x4b\x91\x48\x91\x8d\x23\x42\xb3\x26\x09\x9a\xe5\x5c\xb1\x13\x31\xd3\xb8\x1e\x00\x71\x2b\xb4\x19\x70\xd0\xc8\x29\x5b\xc1\x01\x8a\x7b\x7f\x9a\x4e\x1e\x9f\xce\xc2\x9b\x0a\x69\xa6\x1e\x62\x6a\xe3\xe8\x8d\x13\x6c\x56\x48\x08\xbe\xd1\xec\x6f\xf7\xad\x9b\xde\xce\x95\x34\x5c\x48\x0d\xec\x7e\x23\x4c\xb6\x72\x41\x20\xd1\x86\x1b\x4c\xea\x1a\xe2\x28\xf2\xae\x33\x5e\x55\x28\xf3\x89\xff\x63\xda\x89\x33\x09\xb6\x57\xb3\x5f\x93\xe9\x21\x60\x77\xf1\x19\x8b\x34\x85\xfd\x63\x44\xd6\x12\x97\x2f\x08\xef\xc4\xf4\x5d\xa6\x0a\xf8\x38\x63\x73\x55\xac\x4b\xa9\xdd\xed\x01\x28\x67\xd1\x5c\x3f\x6c\x2b\x84\x24\x5b\x71\x4a\xbc\x61\x24\x96\x10\x1a\xc5\xac\x0d\x76\xfd\x26\xc0\xd5\x0c\x92\x04\xac\xb3\x3d\x57\x43\x1b\xc1\x67\x0a\xee\xae\xa0\x93\xf1\xd3\xd4\x45\x0e\x98\x9b\xda\xce\xa1\x17\xd2\x38\xf0\xd0\xf9\xf1\x1e\x5f\x94\x19\x72\x72\x79\xf6\x6f\xe1\xb2\x9d\x2f\xfa\x17\xf8\x10\x4a\xfe\x3f\x8b\x8e\x0e\x6b\xd8\xd7\xbf\x7b\xe5\xf0\xe1\xae\x8d\x32\xbc\x70\x74\xfc\x38\x0b\x3a\x99\xab\xb5\x34\x0d\xcb\xa7\x1e\x18\x63\x2c\xf5\xb6\x62\x09\x48\x74\x35\x93\xa2\xb0\xbb\x1c\x8d\xc8\xa4\x28\xa6\x1f\x5c\x1c\x7f\x51\xc7\xe3\x05\x7e\x5d\x2e\x35\x9a\x5b\x51\x8a\x36\x4d\x73\x34\x6d\xbb\xe7\xef\x5c\x31\xe3\x31\x28\x47\x72\x4d\x62\x77\x24\x4a\x4e\xdb\x3f\x70\x1b\x5a\xd5\xeb\x18\xe4\xa8\xb3\xc4\x53\xdc\xe9\xdc\xc1\x83\x8f\xb3\x66\x20\x8c\xe8\x7b\x5f\x72\x3b\x3f\xbc\x6b\xe8\x93\xab\x1f\x06\xa7\x05\xcc\x09\xb9\x19\x98\x30\x70\xf1\xd8\x02\x3f\x14\x1c\x41\x06\x07\xab\x2f\xc1\xf9\xb9\x53\xc9\x4b\x6c\x0b\x3e\xc8\x37\x03\x6d\x48\xc8\x17\xcd\x1e\x94\xcf\x38\xb9\xcc\x31\xed\xa4\xb8\xe3\x5a\x6f\x14\xe5\xe3\x29\xd8\x8d\xcc\x68\x5b\x99\xd6\x72\x72\x99\xab\x4b\xe2\x64\xe2\x5f\xe0\xb8\x07\x0b\x7d\xf3\x5d\x68\x73\x29\xe2\x20\xa6\xe6\x99\x9a\x75\xc3\x3e\x15\x84\x3c\xdf\xfa\x40\xb1\x9f\x01\x1d\xe2\xb3\x4f\x6b\xa3\x4a\x6e\x44\x16\xde\xeb\x5b\x95\x73\x83\x37\xdf\x2b\x42\xad\x85\x92\x90\xb8\xd4\xed\x1c\xe8\xf1\x65\xec\x81\x9b\x15\xd2\x81\x31\x48\x90\x90\x69\x6c\xab\x5d\xbe\xd4\x22\xe8\x56\x31\x8e\x3f\xda\x49\x33\xc0\x3f\x99\x3f\x8d\xa3\x61\x5a\xdf\x71\x93\xad\x06\x9c\x44\x0e\x42\x9a\x9f\x7e\x9c\xae\x7d\x58\x28\x79\xf5\x18\x68\xf7\x24\xa4\x41\x5a\xf2\x0c\x6d\x0b\x1a\xc6\x18\xed\x96\x9f\xb5\x6c\x21\x85\x11\xbc\xd0\x75\x7d\xbe\x0f\x7e\x8e\x75\x3c\xd8\xe0\x0c\xe8\xfb\xcc\x44\x1e\x47\x51\x67\xc6\x8d\xfc\x2f\xf0\x43\x2f\x72\x43\xd5\xfd\xc4\xeb\x51\x2d\x30\xcb\x19\xbc\xb9\xb9\xa0\x5e\x1d\x51\x42\x33\x1e\x93\x01\x19\x74\xa6\x52\xf2\xf4\xb3\xb3\xf7\x01\xab\xc6\xac\x8d\xf0\xc6\x0b\x36\x09\x8d\x4c\x9b\x3d\xda\x9a\xba\xef\x2b\xcd\xfe\xe2\x85\xc8\x77\xaa\xdb\xfb\x1f\x77\xe5\xb4\x10\xdb\x45\x74\xa0\x9e\x85\xcc\x14\x11\x66\xc6\xbd\xd4\x57\xba\xdb\xe4\xcd\x4e\x89\x7a\x68\xff\x81\x7d\xb5\x12\x37\xed\x45\xf2\xd4\x43\x1f\x5d\xda\x90\xc1\x89\xd2\x06\xdd\xad\xf2\xae\x94\xa3\x63\x15\xfc\xc9\xab\xbd\x10\xbc\x02\x7a\x02\x18\xa7\x72\x43\xe2\x74\x58\x02\x9f\xb1\xc0\x41\xe1\xb4\x1a\xd8\xb3\xbc\x97\xef\x84\x5f\x0a\x3e\xd5\x90\x28\x8e\x17\xcb\x30\x59\x7f\xdb\xba\xdf\x97\xef\x16\x68\xb6\x0b\x74\x70\x46\xa7\xd4\xd0\x49\xb0\x83\xeb\x7b\xff\x5f\x00\x00\x00\xff\xff\x2d\x4c\xef\x29\x7d\x0c\x00\x00")

func serviceTplBytes() ([]byte, error) {
	return bindataRead(
		_serviceTpl,
		"service.tpl",
	)
}

func serviceTpl() (*asset, error) {
	bytes, err := serviceTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "service.tpl", size: 3197, mode: os.FileMode(420), modTime: time.Unix(1592965651, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vueTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x58\x5b\x8f\xdb\xc6\x15\x7e\xd7\xaf\x38\x1d\xb8\x80\x14\x88\x5c\xed\x43\x50\x98\x2b\xaa\x46\xb7\x45\x51\xb4\x68\x02\x24\x7d\x0a\xf2\x30\x22\x47\xd2\xd4\xc3\x21\x31\x33\x92\x57\x26\xf4\x98\xc0\x0d\x10\xd8\x45\x51\xa3\x4d\x1b\x38\x2e\x9c\x16\x7d\xf0\xc6\x0f\x85\x9b\x66\xdb\xfc\x1a\x4b\x9b\xfe\x8b\x62\x66\x48\x71\x78\xd9\x8b\xb7\x17\xa0\x80\xe1\x25\x67\xce\x9c\x39\xe7\x3b\xdf\xb9\x50\x00\xe3\x6f\x79\x1e\xfc\x90\x70\x22\xb0\x22\x31\x4c\xd7\x20\x19\x8e\xee\x12\xe1\x79\x13\xe8\x8d\x15\x49\x32\x86\x15\x99\xf4\x00\xc6\x84\x79\x11\x16\xb1\x7e\x06\x18\xc7\x74\x05\x92\xa5\x2a\x44\x0b\x82\x63\x22\x90\x5d\xb7\x72\xb3\x54\x24\x10\x50\xce\x28\x27\x21\x52\x62\x49\x10\xac\xbc\x24\x8d\x09\x0b\x91\x24\x58\x44\x0b\x2d\x82\xe0\x8e\x5c\x4e\x13\xaa\x7c\x8e\x15\x5d\x11\x3f\x13\x64\x45\xb8\x0a\x11\x4f\x39\xd9\x6b\xac\x74\x7a\x54\x91\xa4\x5a\xb6\x1b\x94\x67\x4b\x05\x99\x20\x33\x7a\xe2\xd1\x28\xe5\x21\xd2\xab\x51\xca\x3d\x7b\x15\x82\x88\x11\x2c\xf0\x94\x91\xd2\x0a\x9f\x2f\x93\x29\x11\xae\x31\x3e\x8d\x11\x64\x0c\x47\x64\x91\xb2\x58\xef\xed\x9e\x7c\xbe\xfb\xc5\xd7\xdb\x0f\x3f\xd8\x9e\xfe\x0d\x4d\xc6\x07\xe5\x5d\x8e\x5d\x07\x35\xc3\xe0\x7a\x06\x4f\x97\x4a\xa5\x1c\xd4\x3a\x23\x21\xca\x04\x4d\xb0\x58\x23\xb8\x13\x31\x1a\xdd\x0d\xd1\x3b\x85\xcd\x9d\x9e\x4c\x76\x4f\x3e\xff\xe6\x8b\x3f\x98\x7b\xad\x9a\x0b\x94\x97\xda\x04\x91\x44\x39\x88\x4f\x76\x5f\x7e\x70\xfe\xe7\xaf\xac\x9a\xdd\xa7\x4f\x5f\x9d\xbd\xec\x54\xd6\xf0\xac\xd7\x58\xdd\x0b\x76\x5c\x19\x09\x82\x15\xf1\x57\x54\x52\x8d\x78\x08\x36\xfe\x0d\x77\x45\xba\xe4\x31\x44\x0c\x4b\x19\x22\xcd\xab\x42\x4d\xd3\xf1\x8c\x2d\x25\x9a\xec\xfe\x7a\xb6\xfd\xe8\xb3\x0e\x4b\x2d\x0f\xd5\x9a\x91\x10\x99\x28\x07\xd3\x54\x2d\x74\xb4\x62\xba\x2a\xa8\xea\x3c\x12\xe6\x29\xc3\x83\x20\xc6\x0a\x87\xc8\xbc\xf8\xfa\x19\x95\x5a\xee\xd1\x58\x2d\x02\x38\x1c\x8d\xbe\x8d\x00\x60\xe5\xb1\x14\xc7\x94\xcf\x4b\xe1\xe2\xd5\x61\x67\x9e\x7b\x20\x30\x9f\x13\xb8\x45\x87\xb7\xa2\x94\x05\xa1\x7f\x9c\xb2\x65\xc2\xe5\x66\xe3\x64\x85\x39\xef\x45\x66\x07\x18\x9e\xea\x64\xc8\x73\x7d\xc0\x3f\xc6\x09\x61\xc7\x58\x92\x9f\xe2\x84\x6c\x36\x2e\xf5\xcb\x1c\x34\xd9\xe6\xc9\x28\xd5\x30\x9a\x3f\xa8\x16\x7b\x99\x61\x3e\x81\xf1\x78\x0c\x66\xd3\x17\xe9\x3d\xbf\xd4\x6e\xae\xb4\xaa\x61\x32\x99\xc0\xf8\xc0\x48\x3b\xd1\x76\x33\x7d\x1f\x69\xd7\x60\xe7\x2e\xed\x2f\xe1\xf1\x95\xbe\xed\x7e\xf5\xf1\xab\x7f\xfc\xfe\x26\xbe\x54\xa4\x92\xf4\xbe\x16\x49\x30\x63\x2d\x0a\x65\x0c\xd3\x8a\x76\x6f\xf1\x63\xfd\xf0\x83\x98\xaa\xfe\x1e\x81\x41\x93\x4e\x24\xa6\x0a\x4d\xe0\xea\x04\xea\xb8\x38\xd6\x31\x16\x55\xa6\x7e\x9f\x30\xa2\xc8\x25\x97\xc5\x46\xa0\x28\x1d\xed\x0c\xbb\x26\xe6\xd5\xf2\xa4\xb7\x67\x71\x86\xe7\x54\x17\xcd\x94\x43\xb0\xa0\x31\xf1\x74\x8d\xa0\x7c\xce\x88\xde\xda\x17\xdd\x22\xbf\x2a\x69\x04\x53\x1c\xdd\x9d\xdb\xec\x63\x78\x9d\x2e\x55\x88\x8c\xb3\x72\x08\x2a\x55\x98\x0d\x75\x29\x5d\x0d\x41\xab\x11\x43\xe0\xe4\x44\x21\x08\xcc\x56\x99\x02\xe6\x05\x41\xa0\x45\x3c\x0b\x54\x91\x1b\x34\xa1\xca\xdd\x90\x21\x7a\xef\x70\x34\x84\x37\x47\x43\x9d\x51\x43\xb8\x7d\xfb\xf6\xfb\xba\xec\xd3\xfb\xc4\x8b\x16\x1a\xd0\x10\xbd\x43\xef\x93\x63\xf3\x8c\x8a\x0a\x1a\x44\x4b\x21\x08\x57\xa5\x2f\x46\xb9\x7e\xd6\xe0\x17\x5b\xe5\xe9\xb7\xf1\xbc\x3c\xed\xe0\x55\x79\xec\x80\x16\x53\xcc\xd2\x39\x28\xaa\x74\xa2\xdb\x9a\x82\x20\x28\x2a\x95\x2f\xd7\x3c\x6a\x96\x2f\x04\xa6\x1e\x84\xe8\xcd\xd1\x28\x3b\xe9\x68\x72\x45\x53\x2b\x4e\xd9\xae\x66\xf8\xef\x65\xa9\xa4\xda\x80\x10\x09\x3a\x5f\xa8\x72\xb9\xd0\x77\x58\xd3\x77\xdd\x32\xb2\x17\xa4\x33\xe0\xa9\x02\x93\xde\x3f\x92\x6f\xdb\x94\xf8\x31\x59\x83\x23\x5a\x6b\x42\xd7\x2e\x38\x6e\x53\x2d\xbb\x65\x9e\xd3\x19\x1c\xa7\x5c\x61\xca\xa5\xbd\xf4\xdd\x75\x46\x00\x51\xae\xd0\x66\x63\x9b\x69\x9e\x13\x26\xc9\x66\xa3\x04\x4d\xf2\xdc\x14\x88\x1a\x2e\x5d\xd5\x08\x01\x5e\xaa\xd4\x8b\xd2\x24\xd3\xa9\x12\xa2\x74\x36\xbb\x56\xab\x75\xf1\x28\x0b\x12\xd4\x60\x6a\x55\xa9\x66\xef\x72\x46\x98\x59\x9a\x2a\x9d\xd9\x45\xba\x58\x9e\x78\xc5\x6a\x7d\x0c\xb9\xaa\xd9\xcd\x30\x93\x04\x4d\xb6\x0f\x1f\xc3\xee\xe5\x83\xee\xcc\xbf\x72\x06\x38\x36\x5a\xd1\xe4\xfc\xe9\x29\x6c\x4f\x3f\xe9\xea\x7b\x6e\x7f\xdb\x53\xfb\x42\xae\x9f\xff\xfd\xf1\x37\x5f\xff\xb2\xc5\xf5\x65\x16\xdf\x80\xeb\xc5\xa9\x9b\x72\xfd\xba\x3c\xff\x7f\xa2\xb9\x03\xc9\x7f\x8b\xe6\x2d\x92\xff\x6f\x08\x5e\xa7\xc8\x7f\x8a\xe0\x3f\x33\x5a\x6f\x48\x70\xf3\x6e\x3f\x45\xdc\x26\xda\x1b\xcb\x48\xd0\xcc\x80\x49\x93\x2c\x15\x0a\xde\x00\x2c\x01\x67\x14\x66\x22\x4d\x00\xdd\x39\xc0\x19\x3d\xc8\x73\xbf\x88\xca\x51\x0f\x80\x9c\x18\xc9\x98\xcc\xf0\x92\x29\xc8\xcd\x8d\x7a\x20\xec\x0f\x8a\x17\x00\x41\xd4\x52\xf0\xfd\x2b\x80\x69\x48\x81\xb3\x00\x50\x8c\x85\x81\xc5\x67\xe8\xec\x68\x65\x01\xbc\xf7\xbe\xbb\x66\x3a\x68\x00\x23\x77\x4d\xf7\xb7\x00\x0e\xdd\xa5\x74\x36\x93\x44\x35\xe4\x4c\x93\xd5\x03\xea\x7e\x6d\x53\x6d\x57\xa3\x7e\x00\xb9\xb3\x6e\xeb\x54\xdd\xe4\xb6\x14\x40\x11\xe7\xc2\x8d\xae\x1b\x2c\x21\xfe\x7d\x4d\x9b\xa3\x9e\xf3\x9e\x10\xb5\x48\x63\x59\xa9\x9d\x13\xd5\x88\x02\x80\x5a\x50\xe9\xd7\xa6\xf0\xe2\xeb\xe2\x68\x2f\x82\x33\xea\xd8\xe0\xff\x84\x4a\xd5\xaf\xf5\x8a\xb7\xa6\x3f\x27\x91\xf2\xb1\x94\x74\xce\xeb\x5b\x00\xf9\x1e\x71\xe7\x2a\xbb\x34\x2c\x71\x77\x8d\xd0\x2b\x50\xf3\x7a\x6f\x66\x15\x88\xda\xee\xa0\xd7\xfd\xec\xab\x05\xe1\x7d\x21\x33\x08\x27\x35\x68\x6b\x5e\x1b\xda\x40\x08\x42\x66\xe6\xa3\xc5\x2e\x1c\x5d\x24\xae\x45\x5c\x69\xfd\xdf\x85\xc2\x15\xa2\x26\x60\xae\xdc\xa6\x66\x69\x84\x55\xb4\xe8\x13\x21\x8c\xa9\x9b\x41\x29\xb9\xc7\xa1\x9a\xc8\xfa\x2b\xcc\x2e\x08\xa0\x99\xec\x56\x98\x75\xed\x59\xc4\x75\x6c\x9b\x58\xbf\x01\x5a\x25\x78\x70\x38\x38\xaa\x9f\xdc\xf3\xa5\x65\x4e\x35\x5e\x5e\x62\x8e\x55\x1f\xc2\xca\x85\xf3\x0a\xc5\xe6\xdb\xda\x26\x96\x8e\x73\x9b\xaa\xdd\xc3\xc1\x51\xa7\x90\xe9\xb0\x21\xe4\x9b\xee\x6b\x2a\x3a\xb5\xaf\xa9\xf6\x6a\x0a\x8a\x5d\xfb\x7b\x42\x17\x2e\xc5\xc6\x25\xf1\x39\xbc\x34\x3a\xa3\x6b\x23\x65\xe7\x99\xda\x55\x8c\x28\x70\x92\x58\x9f\xbf\x55\xbc\xf7\xeb\x75\x35\xba\x1b\x98\x24\xaf\xd5\x4f\x72\xa2\x02\x28\xbe\x30\x5f\x7d\xf9\xdc\xf7\x7d\xe4\xee\xcb\x8c\x72\x4e\x44\x00\xfb\x6f\xb1\xf2\xb3\xdd\x95\xaa\x3e\x85\x02\x40\x62\x3e\xc5\xfd\xd1\x10\x8a\x7f\xfe\x77\x06\xa8\x2a\x5a\x83\x0b\x2b\x4c\xe1\x5a\x33\x94\xaf\x93\xdb\x2d\x1e\x75\xe4\x68\x0b\x5b\xb8\x32\x2f\x5b\x16\xf4\x07\x6d\x03\x0a\x58\xfc\x88\xa5\x92\x34\xb5\xb7\xe2\x58\x7c\xf1\xea\x6f\xdd\x26\x6b\x6e\x45\x29\x9f\x51\x91\xf4\xd1\xee\xf9\x33\x1b\x97\xed\x8b\x0f\xb7\x0f\x3e\xfb\xe7\x6f\x9f\xe9\x95\x4f\x9f\xee\x7e\xfd\x62\xf7\xf1\xe9\x10\x76\xbf\xf9\x62\xfb\xe8\x8f\xe7\x67\x7f\x3a\x3f\x7b\xfe\x5d\x34\x04\xb4\x7b\xf8\xe8\xfc\xd9\x57\x68\x58\x33\xad\x50\xf7\x3d\x33\x14\xbc\x6b\xc3\x7d\xfe\xf4\x74\x7b\xfa\x49\x2d\x84\x11\xe6\x11\x61\x35\xa9\xed\xc3\xc7\xbb\x97\x0f\x6a\x52\x7a\x0a\x09\x00\xdd\xc3\x82\x6b\x0e\xf4\xba\x01\xbc\x10\xa4\x7a\xc8\x8d\x6c\x85\x84\x9f\xe7\x7e\x35\x98\xda\xa9\xaf\x36\xfc\x0d\x9a\x67\x2f\xa6\x43\x85\x26\x4f\x15\x9d\xad\x7d\xb9\x8c\x22\x22\x65\x1f\x15\x40\x3e\x78\xb4\xfd\xe8\x09\x6a\x10\x04\x2e\x25\x49\xcb\x4f\xb8\xac\x88\xb7\x51\xb9\xb2\xdc\xdb\x59\xae\x96\xdc\x8d\x1c\x29\x24\x8c\x8d\xf5\x49\xf9\x72\xe4\x86\xd0\x3c\xf2\x3a\x69\xd5\x3d\xb9\x76\xe4\x56\x0b\xec\xdd\xef\xfe\xb2\x7b\xfc\xa2\x1b\xec\x9b\x66\x63\x0b\x36\xf7\xf7\x2a\x9d\x50\x8e\x07\x4d\xaf\x21\x6c\x8c\x2d\xf9\x66\x08\xfa\x4c\x87\x69\x2d\xaf\xdd\xf9\x68\x7f\x39\x4f\x39\xe9\x0f\xf2\x4d\x31\x82\xd9\x9f\x5d\x6c\x09\x8a\x9d\x48\x36\x9c\xb5\x62\xfa\xd0\xe6\xa8\x37\x3e\x28\xc7\xed\x1e\xfc\x2b\x00\x00\xff\xff\x58\xef\xb1\x92\x49\x18\x00\x00")

func vueTplBytes() ([]byte, error) {
	return bindataRead(
		_vueTpl,
		"vue.tpl",
	)
}

func vueTpl() (*asset, error) {
	bytes, err := vueTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vue.tpl", size: 6217, mode: os.FileMode(420), modTime: time.Unix(1592900289, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"component.tpl":   componentTpl,
	"controllers.tpl": controllersTpl,
	"dao.tpl":         daoTpl,
	"js.tpl":          jsTpl,
	"markdown.tpl":    markdownTpl,
	"models.tpl":      modelsTpl,
	"service.tpl":     serviceTpl,
	"vue.tpl":         vueTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"component.tpl":   &bintree{componentTpl, map[string]*bintree{}},
	"controllers.tpl": &bintree{controllersTpl, map[string]*bintree{}},
	"dao.tpl":         &bintree{daoTpl, map[string]*bintree{}},
	"js.tpl":          &bintree{jsTpl, map[string]*bintree{}},
	"markdown.tpl":    &bintree{markdownTpl, map[string]*bintree{}},
	"models.tpl":      &bintree{modelsTpl, map[string]*bintree{}},
	"service.tpl":     &bintree{serviceTpl, map[string]*bintree{}},
	"vue.tpl":         &bintree{vueTpl, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
