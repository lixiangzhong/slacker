// Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// component.tpl
// controllers.tpl
// dao.tpl
// js.tpl
// markdown.tpl
// models.tpl
// service.tpl
// vue.tpl
package mvctemplate

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _componentTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\xcb\x6a\xdc\x4a\x10\xdd\xeb\x2b\x8a\xe6\x2e\x34\x17\x5b\xe3\xb5\x34\x1a\x4c\xb2\x4c\x30\x81\x2c\x8d\x17\x6d\xa9\x64\x35\xe9\x17\xdd\xa5\x49\x86\x41\x90\x6d\xc8\x97\x64\x95\x65\xfe\x28\x24\x7f\x11\xba\xf5\x18\x8d\x3d\xc6\x78\x23\x75\x55\x9f\x3a\xf5\x3a\xbd\x21\x54\x56\x72\xc2\x6d\x02\xb0\x41\x79\xe9\x51\x62\x45\x09\x00\xc0\xee\x52\x99\x1a\x65\x46\x4e\xa8\x92\x09\x6d\x3b\x62\xf1\xa2\x11\x92\xd0\xf1\x7b\x89\xd1\x74\xa8\x0c\x0d\x47\x2b\x79\x85\xad\x91\x35\xba\x92\xfd\xf9\xf9\xeb\xef\xd7\x6f\xbf\xbf\xff\x18\xa2\xae\x1b\x53\x75\xbe\x64\x0f\x48\x52\xf8\x91\x2a\x97\x86\xd7\x42\x3f\x94\x6c\x3c\x8c\xd8\xaa\xe5\xfa\x01\x4b\xd6\x72\x5d\x4b\xfc\x18\x8b\x1a\xae\x2a\x89\xfc\x98\x3b\xaf\x85\x0f\x46\x5d\xb2\xe9\x14\x60\xdb\x78\x19\xfa\x31\x96\x84\xd1\xd1\x0c\x1d\x35\xc6\x95\x4c\x10\x2a\x10\x1a\x8e\x65\x00\xe4\x9f\x70\x3f\xdc\x64\x87\x43\xf6\xc1\x09\xc5\xdd\xfe\x1d\xee\xdf\x1a\xd9\x29\x9d\x0d\xbf\x1b\xae\xb0\xef\xe7\x10\xc9\xef\x51\xbe\x36\x68\xc7\x65\x87\xaf\x0a\xda\x6e\xd6\x73\x23\x71\x4d\xeb\x79\x4f\xdb\x64\xb3\x3e\x6e\x30\xd9\xf8\xca\x09\x4b\x01\x24\x94\x35\x8e\xe0\x7f\xe0\x1e\xb8\x15\xd0\x38\xa3\x80\x5d\xaf\xb9\x15\xeb\xc3\x21\x1b\xf9\x8b\x04\x00\xbf\x44\x64\x8d\x0d\xef\x24\xc1\x21\xe6\xac\x39\xf1\x74\x35\x1a\x61\xc5\xd4\x39\x3d\x9b\x00\xe3\xb6\x72\x68\xb8\xf4\x78\x31\xfb\xa3\x4a\x72\x60\xec\xe8\x0a\x53\xce\xe1\xf6\x6e\x74\xf4\x45\x3c\xf4\x03\xc0\x3a\x63\x7d\x0e\x07\x88\x63\xc9\xe1\xa6\x53\xf7\xe8\x2e\x60\x5a\x66\x0e\x6f\x8c\x91\xc8\xf5\x14\xa0\x90\x5a\x53\x87\x90\x91\x6f\xa9\x90\x74\xb7\x5a\xd4\x28\x1a\x48\x69\x6f\xd1\x34\xb0\x83\xb2\x04\xa6\x23\x39\x5b\x62\x00\xa8\x15\x3e\xfb\x0f\x95\xa0\x74\xd4\xf8\x05\xec\x56\xc5\x33\x88\x41\x97\x8f\x20\x3d\xa0\xf4\xf8\x22\xeb\xd5\xcb\xac\x4b\x48\x3f\x0d\x6c\x1a\xe5\xf8\x70\xd2\x65\xfd\x91\x65\x5c\x06\x94\x40\xae\xc3\x23\x03\xb7\x62\x91\x30\x7b\x1f\x83\x97\x1e\x6a\x51\xa7\xce\x5b\x28\xb7\x27\xd5\x4f\xbc\xc2\x13\x94\xe0\xbc\xcd\x82\x1e\xe2\x67\xd9\x42\x7f\x42\x56\x71\xaa\xda\x14\x9d\x8b\x6c\xfd\xd3\x44\xe9\xea\xb9\x3c\x73\xfd\x51\x4d\xa7\x29\x8a\xc7\x63\x10\x5a\x9c\x9b\xc1\x50\xeb\xed\x5d\x71\xea\x8f\xc3\x0f\x93\x09\x46\x14\x59\x71\x2a\x90\xd9\x0f\x5b\xb8\x3a\x23\x8d\x79\xea\x67\x36\xb3\x54\xf2\xe7\xd0\xfe\x51\x96\xa3\x9e\x9b\x4e\x57\xe1\xdd\x3e\x2d\x78\x68\xa3\x38\x47\xa5\x4c\xa7\x09\xeb\x45\xcc\x93\x88\x80\xef\x8b\x64\xb3\x9e\x5e\x7c\xf2\x2f\x00\x00\xff\xff\x50\xb4\x2e\x04\xca\x05\x00\x00")

func componentTplBytes() ([]byte, error) {
	return bindataRead(
		_componentTpl,
		"component.tpl",
	)
}

func componentTpl() (*asset, error) {
	bytes, err := componentTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "component.tpl", size: 1482, mode: os.FileMode(420), modTime: time.Unix(1569292443, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _controllersTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x57\x4f\x6f\xdb\x36\x14\x3f\x8b\x9f\xe2\x8d\x87\x41\x0a\x34\x29\x1d\x8a\x1e\x3c\xf8\xd0\x38\x41\xdb\x2d\x48\xbd\x25\x39\x15\xc5\xc0\x90\xcf\x0e\x11\x89\x72\x1f\xa9\x74\x86\xe6\xef\x3e\x50\xb2\xd7\x38\x16\x15\x6f\x31\x90\xed\x66\x44\x7c\xbf\xf7\xfb\xf3\xf8\x27\x79\xfe\x0e\x0d\x92\x70\xa8\xe0\x66\x09\xb6\x10\xf2\x0e\x09\x58\x9e\xcf\xb5\x01\xaa\x6a\x87\xc4\xf2\x23\x26\x16\x3a\x7b\x77\x76\x15\xf3\xbc\x69\xb2\xf3\xea\x2b\xd2\x85\x28\x71\xb5\xca\x47\x5a\xf1\x54\x56\xc6\x51\x55\x14\x48\x36\xbb\x12\x77\xd8\x34\xd9\x44\x94\x58\x4c\x84\xc5\x6e\x5d\x12\x44\xd8\xae\x3e\xd7\xd6\x85\xaa\xa7\x1f\x2f\x9f\x2a\x9f\x10\x0a\x17\x6c\x3f\xbd\xde\x47\xc0\xf5\x42\x0d\x61\xbc\xbd\x9a\xbc\xdf\x03\x65\x2a\x9c\xbc\x0d\x81\x9c\x9e\x9d\x9f\x5d\x9d\xed\x81\x72\x8a\x05\xf6\x72\x81\x01\x32\xdb\x10\x27\x9e\xc8\xbf\x61\xd3\x03\x13\xa4\x13\xb4\xb7\x07\x24\xe8\x2f\xb0\xa3\x9c\xb1\x85\x90\x77\x62\x8e\xf0\xa0\x8e\x31\x5d\x2e\x2a\x72\x31\x8b\x80\x37\x0d\x9f\x57\x96\x64\x5e\x56\x0a\x0b\xcb\xff\x84\xec\x43\xfb\xf5\x5c\xdf\x90\xa0\xe5\x6a\xe5\x29\xac\xbb\x6f\x15\x20\x91\xac\x14\xf6\x54\x70\x16\xf1\xb9\x76\xb7\xf5\x4d\x26\xab\xd2\x8f\xfe\x0f\xf3\xca\x68\xe9\x7f\xf9\x6f\xd6\x91\xac\xcc\x3d\x67\x09\x63\xb3\xda\x48\xe8\x1f\xd3\x58\xc2\xd1\x5c\x9b\x6c\x52\x19\x87\x7f\xb8\x04\xa0\x61\xd1\xbd\x20\xf8\x52\x23\x2d\x61\xdb\x99\x6c\xb7\x9e\x45\xd5\x6c\x66\xd1\xa5\xf0\x3b\x8c\xc6\xb0\xee\x9a\x4d\x05\x59\xbc\xd6\xc6\xc5\x32\x3b\xc5\x99\xa8\x0b\xf7\xab\x07\x8c\x79\xb7\x9c\xa7\xfc\x98\x27\x29\xbc\x3a\x4e\xe1\xcd\xeb\x84\x45\x85\x2e\xf5\xfe\x20\xed\xea\x35\xc6\xab\xe3\xb4\x45\x90\xd9\xe5\x6d\x55\x17\xea\x44\x1b\xd5\x2d\xfb\xbe\xd5\x90\xb0\x48\x09\x27\x52\x57\x39\x51\xa4\x48\x34\x1a\xc3\x25\xd2\xbd\x96\x18\xd8\xba\xf1\x5a\x52\xc7\x69\x03\xf2\xf3\xe5\xc7\x8b\x58\xa6\xe0\xdd\x7a\xdf\xb0\x28\xe2\x1e\x96\x8f\x00\x5a\x78\xff\x87\xb6\x05\x1f\x41\xd7\x8a\x45\x2b\xdf\x2e\x61\xab\x75\x02\xfd\xc7\x4c\x30\x01\x0f\xbb\x4f\x00\x3d\xc2\x7d\x69\xc2\x22\xad\x52\x40\xa2\x1d\x4f\x3f\xb4\x96\x4e\x05\x89\x32\xe6\x5a\x3d\x30\x51\xcf\xda\x82\xef\xc6\x60\x74\xe1\x89\xfc\x2d\xdb\xe8\xd6\x3c\x3f\x8d\xd9\x05\x7e\x8d\x37\xbf\x4f\x84\xfa\x0d\xbf\xd4\x68\x5d\x2b\x36\x61\x51\x44\xe8\x6a\x32\x2c\x5a\x75\xce\x7b\xd2\x53\xd2\xa5\xa0\xe5\x2f\xb8\x9c\x54\x45\x5d\x9a\xc7\x2a\xc6\x5a\xb1\xc8\x77\xfe\x96\x4d\xc0\xad\x8d\xb6\x0d\xaf\xd6\xfc\x2d\x9b\x43\x07\xea\xb3\x8d\x5e\x9b\x33\x1a\xc3\x43\xcb\x5b\x22\x1d\xab\x9f\x0e\x6b\xde\xba\xd9\xc6\x90\xa0\xae\xa7\x2d\x09\x9d\x5f\xbd\x96\xbc\xfc\xd4\xf8\x50\xb6\xf3\x78\x6e\x3c\xdb\xe5\x87\x0e\x6a\x97\xdc\x53\xf3\x0e\x63\xd8\x9d\xf8\x60\x4a\x8f\xd8\xb3\xc7\x74\xbf\x05\x1d\xb8\x34\xff\xc3\x39\xd7\xad\xe8\x99\xc6\x42\x59\x18\x43\x29\xee\x30\x2e\xc5\xe2\x93\x75\xa4\xcd\xfc\xb3\x36\x0e\x69\x26\x24\x36\xab\x64\x38\xe2\x87\x40\x87\x0d\x18\x1e\x07\x15\x72\x59\xab\x74\x8b\xc5\x40\x50\xa1\x67\x49\x5f\x52\x00\x00\xcf\x0e\x0b\x0e\x6d\x42\x50\x81\x56\x01\xe1\xf9\x51\xa7\x1d\x06\x1f\x66\x3b\x0e\xb4\xa3\x6a\xd7\xca\xb5\x99\xdb\x1f\xb5\x71\x6f\x5e\xdb\x58\x66\xed\x75\xf7\x96\x48\x2c\x3b\xf1\x49\xb7\x74\x0c\x62\xb1\x40\xa3\x62\xad\x6c\xfa\x54\xd5\xa7\xcf\x3c\x49\xb2\x2c\x4b\x60\xe7\xc4\x1d\xe6\xa9\x87\x13\x86\xa1\x57\x6c\x9f\xc8\xff\xc9\x6e\x78\xd9\x34\xc2\x5b\xcf\xa6\xb0\xef\xe6\x83\xc1\x47\x7d\x28\x9b\x7f\x7a\x23\xc1\x41\xaf\xa4\x97\xc8\xa0\x3f\x82\xa0\x6f\x7e\x43\x40\x9f\xed\xfe\xbf\xa4\xbf\x02\x00\x00\xff\xff\x19\x5e\xf5\x5c\xb6\x0f\x00\x00")

func controllersTplBytes() ([]byte, error) {
	return bindataRead(
		_controllersTpl,
		"controllers.tpl",
	)
}

func controllersTpl() (*asset, error) {
	bytes, err := controllersTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "controllers.tpl", size: 4022, mode: os.FileMode(420), modTime: time.Unix(1587021651, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _daoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x94\x51\x6f\xe2\x38\x14\x85\x9f\xf1\xaf\xb8\x9b\x07\xe4\x54\xc8\x6c\xa5\xd5\x3e\x54\x42\x2b\x95\xb6\xab\x6a\x69\x55\x4a\xab\x7d\xa8\xaa\x91\x89\x2f\xd4\x22\x89\x19\xdb\x94\x22\x8f\xff\xfb\xc8\x36\x61\xa0\x30\x03\xf3\x14\x42\xee\xf5\x3d\xe7\xf3\xb1\xbb\xdd\x7f\xb1\x46\xcd\x2d\x0a\x18\xaf\xc0\x94\xbc\x98\xa1\x26\x73\x5e\xcc\xf8\x14\x41\x70\x45\x88\xac\xe6\x4a\x5b\xa0\x40\x32\xe7\xb2\xa9\x32\xba\xe8\x56\x4a\x60\x69\xb2\x6f\xc0\x6e\xe3\xd7\x81\x1c\x6b\xae\x57\xde\x77\x9d\x63\xf7\xbc\x42\xef\x33\x20\x39\x21\x93\x45\x5d\x00\x15\x70\x76\xc5\x55\x0e\x03\x69\xac\x73\xac\xcf\x2b\x2c\xfb\xdc\x60\xaa\xa4\xcb\x37\xd4\x08\xc0\x18\x0b\xe5\xf4\x6c\xaa\x74\xc5\xae\x2e\xf3\xcd\x0f\xa0\x2f\xaf\xce\xb1\x81\x5a\xa2\x4e\x3d\x6c\x7f\x99\x0e\x6a\xad\x74\x0e\x8e\x00\x00\xbc\x73\x0d\x82\x5b\x0e\xbd\x8a\xcf\xf0\xa4\xfe\x3f\x73\xd2\x42\xad\xe1\xa2\x27\x58\x9c\x7c\x17\x5c\xd2\xa3\x8d\xce\xe7\x6c\x54\xa8\x39\x9a\xe4\x84\x31\x96\xb3\x1b\x59\x0b\xda\x0e\x0a\x72\x76\x1d\x84\x45\x55\x1a\xed\x42\xd7\x51\x58\x90\x4b\x3c\x21\xce\xb1\x3b\xb4\x6f\x4a\x3c\xf1\x19\x7a\xff\x19\x59\x5f\x23\xb7\x78\x00\x5a\x34\x77\x76\x54\x5c\x0e\x11\x8b\x23\xd0\xda\x51\x90\x1c\xa6\xd5\xe9\xb6\xcc\x3d\x05\xcf\x73\xf1\x0b\x05\xa7\x0a\x00\x47\xc2\xfc\x6e\x17\xbe\x74\x12\x64\x10\x4c\x8c\x63\x58\xc4\xf5\x07\x16\x34\x5b\xc4\x41\xb0\x49\x10\x18\xb4\xcd\x9b\x18\x0d\x07\xde\x43\x4a\x8a\x73\xec\x41\xcb\x8a\xeb\xd5\x7f\xb8\xea\xab\x72\x51\xd5\x2c\x3d\x52\x63\xef\xe2\x58\x45\xd6\x89\x96\xb7\x89\x34\x48\x46\xfc\x1d\x77\x37\x6e\x8f\xc8\x03\xb7\xc5\xdb\x01\x20\x52\x80\xac\xed\xdf\x7f\x75\xd6\x4e\x2a\x3e\x7f\x31\x56\xcb\x7a\xfa\x2a\x6b\x8b\x7a\xc2\x0b\x74\x5b\x40\x00\x08\x40\x6b\x93\xd4\xa3\x28\x43\x75\xa8\x64\x07\xed\xed\xd6\xf6\xa4\x00\xd2\xda\xdd\xed\x94\xe7\x64\x2d\xed\x6a\xea\x35\x34\x09\xde\x32\xfc\x23\x96\x57\x58\xa2\x8d\xc1\x0c\x7f\xca\x09\xb0\x5b\xf3\x6c\x50\x3f\xf1\x71\x19\x36\xe9\x33\x9c\x10\xe3\x7d\xe9\x97\xab\xf0\xfc\xcd\xd0\x82\x03\xb2\x31\x1c\x66\xd6\xbc\xc2\x43\x76\xc1\x7b\xe8\x41\x42\x6d\xd8\x93\x8a\xab\xd3\x13\x3b\x73\x80\xe6\xdc\x37\xa0\xfe\x0f\x31\xa3\xd9\x81\xde\x4d\x86\xc0\xfb\xde\x3f\x29\x46\xa7\xcc\x60\x37\x52\x1b\xbb\x73\xd0\x9a\xcd\x81\xf5\x45\xb0\x8b\x71\x1f\xca\xad\xb9\xfe\x90\xc6\xd2\xc5\x7a\xd4\xda\x6f\x0e\x63\xa5\x4a\x70\xa4\x35\x1a\x0e\x82\x87\xcc\x60\x89\x85\x85\x73\x98\x68\x55\x6d\x1d\xa7\xcd\xe1\xf9\xa9\xa9\xe0\x09\x4a\x59\x49\x0b\xe7\x19\x89\xc9\xc4\x30\x33\x8e\xd8\x82\x24\xc6\x6c\xb8\x40\xbd\x7a\x54\x4b\x3a\x1a\x0e\x3a\x8d\xa4\x70\x0f\xf2\x9a\xb6\x63\x53\x4e\x5a\x72\x12\xcc\xc1\x1f\x3d\xa8\x65\x09\xed\x76\xf3\x66\xbe\x96\x01\xc2\xbd\x7a\x54\x4b\x13\xa4\x37\x2c\xac\x5e\x20\x69\xf9\x0d\x9b\xb8\x50\xba\x25\xb1\x16\xde\x7f\x0f\x00\x00\xff\xff\x0b\x25\x1e\xcb\xb0\x06\x00\x00")

func daoTplBytes() ([]byte, error) {
	return bindataRead(
		_daoTpl,
		"dao.tpl",
	)
}

func daoTpl() (*asset, error) {
	bytes, err := daoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dao.tpl", size: 1712, mode: os.FileMode(420), modTime: time.Unix(1586765704, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _jsTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x55\x4d\x6f\xd3\x40\x10\xbd\xfb\x57\x8c\x56\x39\x38\xd0\xda\xf7\x54\x16\xd0\x0f\x10\x52\x85\x2a\x68\xe1\xd8\x4c\xec\x09\xb1\x62\xef\x9a\xdd\x71\x43\x65\xf9\xbf\xa3\x9d\x75\x14\x20\x8e\xa5\xf6\x52\x6b\x77\xde\xbc\xf7\xf6\x4d\x77\x93\xa6\x00\x9f\x48\x93\x45\xa6\x02\x56\xcf\xe0\x2a\xcc\xb7\x64\xa3\xb2\x6e\x8c\x65\xd8\x30\x37\xb0\xb6\xa6\x06\x95\xa4\x7e\xa1\x2e\xa2\x7d\xcd\xb1\xb1\x34\x14\xdf\xa7\xb2\xfa\xab\xfa\x06\xd0\x41\x6e\xcc\xb6\x3c\x60\x5a\x2e\x2b\x97\x86\x4d\x0f\xa5\xdf\x02\x5d\xb7\x3a\xe7\xd2\x68\xb8\xc7\x2d\xc5\x65\x31\x87\x2e\x02\xb0\xc4\xad\xd5\xe2\x20\xf9\x49\x1c\x2f\x53\x6c\xca\xb4\xeb\x92\x5b\xb3\x23\xfb\x05\x6b\xea\xfb\x74\xd6\x95\x45\xbf\x9c\x5f\x44\xfd\x31\xdb\x6d\xe9\x38\xfe\xd5\x92\x7d\x1e\x27\x54\x23\x84\xea\x4c\xa0\x00\x0d\x5a\xac\xdd\x02\xa4\x3f\x02\xe8\xc7\x35\xae\x2c\x21\x53\xbc\x32\xc5\x88\x48\x63\xdc\x49\x15\xe9\x18\xa5\x7c\x68\x0a\x4f\x59\x16\x03\xe8\x98\xb6\x9d\x0c\x63\x8a\xfb\x0e\x39\xdf\x4c\x51\x4b\xfd\x95\xe4\xd7\x54\x11\x8f\xcf\xaf\x08\xa5\x17\x8f\xf0\xd2\xfb\x19\x78\x4f\x4c\x72\x82\x7a\xf9\xc2\x61\x8a\x5a\x88\x48\x90\x2f\x4f\x69\xc8\xe7\x35\xba\xc3\xd8\xa7\x85\x4f\x4c\xfe\x75\xb2\x9f\xe5\xa2\xc6\xeb\xb2\xa2\x20\xf5\x84\x16\xd6\xc6\xd6\x90\x81\xa6\x1d\x7c\x34\xb6\xbe\x46\xc6\x78\x7e\x11\x81\x14\x12\x6c\x1a\xd2\x45\xac\x7c\x8f\x3a\x03\xff\x09\x7f\x13\x8d\x35\x09\xee\xe8\x02\x04\xc3\xe1\x55\x38\xf6\xed\x69\xf7\xbe\x37\x84\x05\x59\xb7\x18\x96\x00\xea\xca\x68\x26\xcd\xe7\xf7\xcf\x0d\xa9\x05\xa8\xba\xad\xb8\x6c\xd0\x72\xea\xfb\xce\x0b\x64\x54\x82\xed\x4f\x1f\xf3\x46\xd6\xf1\xe1\x88\xad\xad\x20\x0b\x41\x59\x93\x93\x73\x09\xe9\xa7\xe4\xfb\xc3\xcd\xe3\x87\xbb\xbb\xc7\x4b\x74\xf4\xf0\xf5\x16\xde\x0a\x22\xdc\xde\x40\xf9\x9f\xf9\x77\x98\xfb\xe6\x47\x36\x5b\xd2\x99\x1a\x1a\xe4\x19\x4c\x1c\x23\x53\x22\x15\x9f\x49\x65\x72\xf4\x5e\x92\x8d\xa5\x35\x64\xde\xc1\xa8\xd5\x1f\xb4\xfa\x66\xf2\x2d\xed\xdd\xe6\x46\x3b\x06\xa1\x81\x6c\x78\x4c\xfd\xd3\x75\xef\x77\xc2\x58\x2a\x62\xd8\x18\xc7\x90\x81\x52\x7e\xa3\x5c\x43\x3c\x75\xae\xcc\x03\xe7\xfb\xc4\x43\xe7\x72\xe7\x16\x69\x3a\xeb\x0e\x3e\x8d\xe3\x7e\xe9\xe9\x7a\xa0\xca\xd1\xbf\xf0\x09\xfa\xc4\x52\x53\x61\x4e\xb1\x92\x1f\x8b\x33\x50\x3b\xa7\xc4\x68\x7f\xf8\xdf\x58\xce\x3a\x11\x90\x6c\x77\xb4\x72\x72\xe6\xc9\x78\x67\x9d\x7c\xbd\xa7\x3e\xfa\x13\x00\x00\xff\xff\xc7\x4e\x02\x78\xb5\x06\x00\x00")

func jsTplBytes() ([]byte, error) {
	return bindataRead(
		_jsTpl,
		"js.tpl",
	)
}

func jsTpl() (*asset, error) {
	bytes, err := jsTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "js.tpl", size: 1717, mode: os.FileMode(420), modTime: time.Unix(1578994132, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _markdownTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x52\xcd\x6e\xd3\x4c\x14\xdd\xcf\x53\x5c\xb9\xd5\xb7\x4a\xeb\xae\x2d\xd5\xdf\xa2\x0b\x36\x88\x15\x62\x01\x42\xaa\x89\xa7\x25\xd4\x3f\xc5\x76\x84\xa2\xc9\x48\xa1\x0a\x10\x14\x9a\x54\x22\x2d\x25\x25\x85\x40\x52\x75\x43\x1a\x24\x0a\x6d\x1c\xda\x97\xf1\x8c\x9d\xb7\x40\xf6\x38\x28\x81\x12\x58\x30\xab\xb9\x47\xe7\x9e\x73\xee\xcc\x95\xe5\x6b\xd8\xc2\x8e\xe6\x61\x1d\xee\x15\xc0\x35\xb4\xec\x06\x76\xd0\x1c\x10\xb2\x78\x43\x33\x31\xa5\x88\x7d\x7c\xc5\x7b\xa7\x6c\x67\x1b\x8a\xc0\x4a\xc3\xf0\x93\xcf\x0e\xab\x50\x84\xe8\xe4\x33\xdf\xaf\xa1\x85\xf1\x29\x2e\x5c\x75\x45\x84\x38\x9a\xb5\x8e\x61\x3e\x97\x99\xcf\xda\x86\xb2\xbc\xb8\x62\x1b\x79\xd3\x72\x29\x05\x42\x62\x28\x05\x84\x1d\x14\xc7\xe8\xcd\xc2\xe6\x54\xbd\x62\x9b\x26\xb6\x3c\x4a\x11\x21\xd8\xd2\x29\x45\x68\x6e\x0e\x1e\xb8\xb6\x15\x76\x06\xc1\x45\x15\xad\xae\xae\xc6\x15\x22\x33\x3d\x01\x40\xba\xc2\x57\x52\x52\xf0\x36\x76\xec\x5b\x9a\x91\xc7\x94\x66\x7e\x38\xd1\x58\x3c\xf1\xe3\xb5\x2e\xab\x7f\x88\x2e\x1b\xec\xe0\xf0\x17\xdf\x44\x3c\x6b\xeb\x58\x52\x96\x32\xa2\x32\xb1\xeb\x6a\xeb\x58\x52\x24\x7b\x43\x4a\x31\x5d\xf3\x34\x49\x11\xf4\x7f\x16\x55\x88\x89\xb8\xf1\x7d\x32\x34\xab\x1c\x30\x7f\x00\x48\x85\x4d\xdb\xf5\x92\x37\x03\x56\xe9\x83\xac\x6d\xe6\x64\x42\x16\xaf\xdb\x8f\xb0\x93\x7e\x77\xc2\x7f\x72\x2c\x7e\x3d\xb8\xec\xf1\xc6\x79\xdc\x97\x9f\xdd\x26\x2b\x39\x1d\xc4\x03\xbd\x78\xc6\x7a\xcd\xc9\xf6\xc4\x57\xf3\xb2\xf7\xff\x42\x41\x55\x21\xb8\xa8\xb2\xa3\x2d\x48\x5b\x88\x34\x7a\x53\x8a\x8e\x1e\x0b\xa9\xb0\x59\x16\xca\x92\xc2\x4a\x43\xfa\x87\x34\x62\xf4\x77\xa3\xd7\x1d\xa4\x82\x8e\x0d\xec\xe1\xdf\xb3\x21\x66\x47\xb5\xaf\xac\xbe\x17\x9c\x95\x78\xab\x8d\x54\x58\xc7\xde\xec\x61\x05\x9f\x75\x9a\x33\xf9\x48\x05\xfe\xb6\x1b\x9d\xbc\xe7\xad\x76\xe0\x7f\x09\xfc\xee\xc3\x3c\x76\x0a\xac\xbe\xc5\x77\xfb\x7c\xef\x9c\x0d\xeb\xa1\x5f\x66\x3b\x95\xcc\xc8\xdf\x8f\x7a\x9d\xff\xed\xb5\x35\x17\x7b\xcb\x4b\xff\x19\x39\x33\xe7\x2d\x2f\x21\x15\xa9\x20\x76\x0e\xa9\x30\xde\x37\x15\x08\x52\x61\x7a\xe7\xd2\xfa\xa7\xad\x4b\xd1\xf1\xde\x89\x32\x81\x3c\xdb\xd3\x8c\xb8\x13\x64\x99\x7d\x7b\xc9\x9e\x6f\x4f\x25\x3d\xab\x86\xcd\x32\x2f\xf9\xbc\xd5\xe6\xbb\xfd\x4c\xd8\x38\x0e\x06\x35\x56\x79\x3a\x6a\x9f\x4e\xaa\x08\xe1\x3b\x77\x53\x2c\x1e\x98\x8a\xa0\xdf\x03\x00\x00\xff\xff\x2c\x19\x42\x29\x60\x04\x00\x00")

func markdownTplBytes() ([]byte, error) {
	return bindataRead(
		_markdownTpl,
		"markdown.tpl",
	)
}

func markdownTpl() (*asset, error) {
	bytes, err := markdownTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "markdown.tpl", size: 1120, mode: os.FileMode(420), modTime: time.Unix(1563850859, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _modelsTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x4d\x6b\xdc\x3c\x10\xc7\xcf\x3b\x9f\x62\x58\x72\xb0\x21\x8f\xf4\xf4\x5a\xd8\x42\xd9\x42\x49\xbb\x49\xba\x38\x3d\x95\x1e\xb4\xf6\xc4\x51\xa2\x17\x57\x92\x49\x97\x41\xdf\xbd\xc8\x76\x96\xbc\xf4\xd0\x9b\x67\xe4\xff\xfc\xf4\xf3\x58\xca\xcf\xe4\x28\xa8\x44\x1d\x1e\x8e\x18\x8d\x6a\x1f\x28\x80\x94\x49\x1d\x0c\x21\xb3\xb8\x52\x96\x72\x06\x29\x9b\xfd\x0e\xa4\x64\x16\x4d\xea\x9a\xfd\x6e\xea\x95\xc3\x52\xe0\x7f\x1f\xb0\xd7\xe9\x6e\x3c\x88\xd6\x5b\x79\x6f\xbd\x0e\xde\xc9\xf8\xcb\xfc\x9e\x33\x4f\x2f\x4e\xa9\xad\x37\xa3\x75\x71\x99\xb6\xdf\x2d\x75\xce\x30\xa8\xf6\x41\xf5\x13\x77\xe7\x1f\x29\x2c\x70\x68\xbd\x8b\xa9\x82\x55\x93\x54\xa2\xeb\xaf\x9b\xff\x97\xc7\x4f\x64\x36\xef\xa0\x06\xb8\x1d\x5d\x8b\xda\xe9\x54\xd5\xc8\x68\x7d\x47\x26\x8a\x8f\x63\xf2\x97\xba\x2f\x76\x15\xb3\xd8\x2a\x4b\x66\xab\x22\xcd\x53\x39\xd7\x98\x01\x21\x1d\x87\x09\xf8\xea\x18\x63\x0a\x63\x9b\x18\x10\x11\x99\x83\x72\x3d\xe1\x99\x3e\x3f\x6b\xbd\x79\xbf\x11\xa7\x3b\x23\x73\x69\xbd\x89\x2f\xed\x9b\xe3\xf0\xbc\x52\xfd\xb3\x84\xb7\x96\x5c\xca\x79\x41\x90\xeb\x72\x86\x0c\xc0\xac\x6f\x51\x5c\xc4\xef\x91\xc2\x4d\xd9\x43\xce\xb3\x60\xb1\xb8\x70\x3a\x69\x65\x66\xf2\x6b\x6a\x8d\x97\x2a\xc4\x3b\x65\xbe\x34\xd7\x57\x55\x8d\xd5\x8f\x9f\x87\x63\xa2\x73\xa4\x10\x7c\xa8\x91\x61\x35\xe9\x26\x3b\xfc\x25\x0d\xab\x17\xf3\x05\xb3\xf8\xa6\x62\x7c\xf4\xa1\x9b\x75\xdf\x48\x6e\x70\xbd\x86\x55\xa0\x34\x06\x87\xf7\xd1\x3b\xb1\xf0\xab\x64\x87\x97\xb7\xad\x6b\xc8\xf0\x24\xf9\xcf\x3a\x93\x7e\x29\xaa\xba\x2c\x44\xbb\x1e\x19\x4f\xc4\xf5\xe9\xff\x5c\x97\xef\x06\x08\x88\x7f\x02\x00\x00\xff\xff\xdd\x07\x60\x8b\xd2\x02\x00\x00")

func modelsTplBytes() ([]byte, error) {
	return bindataRead(
		_modelsTpl,
		"models.tpl",
	)
}

func modelsTpl() (*asset, error) {
	bytes, err := modelsTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "models.tpl", size: 722, mode: os.FileMode(420), modTime: time.Unix(1590130715, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x57\x4d\x6f\xe3\x36\x10\x3d\x4b\xbf\x62\x22\x2c\x0a\x69\x21\x30\x7b\x68\x7b\x48\xa1\x16\x5b\x27\x6d\x83\x66\xbb\x01\x92\x6d\x0f\x41\xb0\xa0\xa5\x71\x4c\x44\x22\x05\x92\x8e\xd7\x60\xf5\xdf\x0b\x92\x92\x25\xdb\x92\xed\x53\x73\x91\x22\xce\xc7\x9b\xe1\x7b\x33\xc9\xe5\xe5\xef\xc8\x51\x52\x8d\x05\xcc\x37\xa0\x4a\x9a\xbf\xa2\x0c\x6b\x9a\xbf\xd2\x17\x04\x85\xf2\x8d\xe5\x18\x86\xac\xaa\x85\xd4\x10\x87\x41\x64\x4c\xf4\x22\x94\xcc\x2f\x2b\x51\x60\xa9\xa2\x7f\x81\xdc\xba\xd3\x3b\x36\x97\x54\x6e\x9a\xe6\xd2\x18\xf2\x17\xad\xb0\x69\xa2\xa1\xbd\xca\x45\x8d\x23\xe6\x51\x18\x18\xc3\x16\x40\x6e\xd5\x17\x85\xf2\x91\xce\x4b\x6c\x9a\xa1\x27\x4a\x99\x8b\x62\xd2\x17\x79\xd1\x34\x61\x12\x86\xe1\x62\xc5\x73\x88\x15\xbc\x7f\xf0\xc0\x93\x47\xfa\x8a\xc6\x90\x19\xad\xb0\x9c\x51\x85\x1e\x56\x5c\x50\x4d\xe1\xbd\x31\xe4\x4e\xac\x51\xfa\x8f\xe4\xd0\x2e\x41\x29\x85\x34\x61\x20\x51\xaf\x24\x07\x45\x0a\x2a\xc8\x91\x98\x49\xd8\x8c\x80\xb8\x63\x4a\x8f\x38\x88\xc5\x42\xa1\x4e\x4b\x56\x31\x0d\x2b\xc6\xf5\x8f\xdf\xa7\x0a\xa9\xcc\x97\x70\x1a\x59\xfc\xf4\x7c\xd2\x28\x65\x5c\xa7\xae\x84\xc4\x40\x18\xbc\x51\x09\xeb\x25\x4a\x04\x77\x13\xe4\x1f\xfb\xae\xda\xe6\xcf\x04\xd7\x94\x71\x05\xe4\x61\xcd\x74\xbe\xb4\x51\x20\x52\x9a\x6a\x8c\x9a\x06\xc2\x20\x70\xae\x19\xad\x6b\xe4\x45\xec\x7e\x49\x07\x71\x62\x6f\x7b\x91\xfd\x12\xa5\x7b\xc0\x1e\xec\xc1\x35\x96\x49\x02\xfd\x6d\x05\xc6\x48\xca\x5f\x10\xde\xb1\xf4\x5d\x2e\x4a\xb8\xca\xc8\x4c\x94\xab\x8a\x2b\x7b\xba\x07\xca\x5a\xb4\xc7\x8f\x9b\x1a\x21\xca\x97\x54\x46\xce\x30\x60\x0b\xf0\x5d\x23\xc6\x78\xbb\xdd\x2e\xc0\x45\x06\x51\x04\xc6\xda\x9e\xaa\xa1\x8b\xe0\x32\x79\x77\x5b\xd0\xd1\xf8\x49\x62\x23\x7b\xcc\x6d\x6d\xa7\xd0\x33\xae\xcf\x05\xff\xf3\x87\xff\x15\x79\xf7\x02\x00\xa0\x85\xa6\xa5\xe5\xcf\x55\xe6\x89\x3f\x13\x2b\xae\x63\x1f\x32\x75\x18\x08\x21\x89\xb3\x65\x0b\x40\x29\x2f\x32\xce\x4a\xe3\x3e\xd8\x9f\x56\x35\x9c\x95\xe9\x07\x1b\xc7\x1d\x34\xe1\x74\x2d\x9f\x9d\x22\xee\xac\x20\x3a\x75\x80\x93\x87\x45\x3a\xed\x25\x0b\x94\xb6\x03\xe4\x5e\xb2\x8a\xca\xcd\x9f\xb8\xf1\x7d\xd8\x69\x07\x14\xa8\xf2\xc8\x91\xd0\x4a\xd5\x02\x82\xab\xac\xd5\xf4\x84\x44\xfb\x22\xbb\x11\xe0\x5c\x7d\x67\x6c\xc5\x30\x2a\x78\x98\x49\xa4\x7a\x64\x48\xc0\xd9\x93\x07\x9c\x6e\xed\xdd\x8f\xce\x46\x57\x82\xf5\xb3\x5f\x39\xad\xb0\x2b\x78\x2f\x5f\x06\x4a\x4b\xc6\x5f\x14\x79\x14\x2e\x63\x7c\x9e\x63\x32\x48\x71\x4f\x95\x5a\x0b\x59\x4c\xa7\x20\x37\x3c\x97\x9b\x5a\x77\x96\xf1\x79\xae\x36\x89\x15\x80\xbb\x81\xc3\x1e\xdc\xaa\x9b\x6f\x4c\xe9\x73\x11\x7b\x9d\xb4\xd7\xd4\x6e\x0c\xf2\xb1\x94\x48\x8b\x8d\x0b\x14\x3a\xae\x0f\xa8\x4e\x3e\xae\xb4\xa8\xa8\x66\xb9\xbf\xaf\x2f\x75\x41\x35\xde\x7c\xab\x25\x2a\xc5\x04\x87\xc8\xa6\x8e\x5a\x39\xec\xf0\x65\xea\x82\xdb\x2d\x30\x80\x31\x4a\x10\x9f\x69\x6a\x31\x9d\xbf\x97\x02\x18\x56\x31\x8d\x3f\xd8\x8a\xd1\xc3\x3f\x9a\x3f\x09\x83\x71\x5a\xdf\x53\x9d\x2f\x47\x9c\x58\x01\x7e\x7b\xad\x5c\x58\xa8\x68\xfd\xe4\x69\xf7\xcc\xb8\x46\xb9\xa0\x39\x9a\x0e\x34\x4c\x31\xda\xae\x27\x63\xc8\x2d\x67\x9a\xd1\x52\x35\xcd\xe9\x3e\xb8\xc9\x35\xf0\x20\xa3\x33\x60\xd7\x27\x63\x45\x18\x04\x83\xa9\x36\xb1\xce\xbf\xdb\x89\xdc\x52\xb5\x9f\x71\x3b\x54\xf3\xcc\xb2\x06\x6f\x76\x2e\x88\x57\x4b\x14\xdf\x8c\xa7\x68\x44\x06\x83\xa9\x14\x3d\xff\x64\xed\x5d\xc0\xba\x35\xeb\x22\xbc\xd1\x92\xc4\xbe\x91\x49\xbb\x2c\x3a\x53\xfb\x7e\xa1\xc8\xdf\xb4\x64\xc5\x56\x75\xbd\xff\x61\x57\x8e\x0b\xb1\x0d\xba\xaf\x9e\x5b\x9e\x0b\x29\x31\xd7\xf6\xa6\x3e\xcb\xfb\x75\xe1\xcc\xdc\xe6\x1a\xa0\xfd\x0a\x7d\xb5\x1c\xd7\xdd\x41\xf4\xbc\x83\x3e\x38\xb7\x21\xa3\x13\xa5\x0b\xba\x5d\x59\x43\x29\x07\x87\x2a\xf8\x44\xeb\x5e\x08\x4e\x01\x3b\x02\x98\xa6\x72\x4b\xe2\x64\x5c\x02\xd7\x58\xe2\xa8\x70\x3a\x0d\xf4\x2c\xdf\xc9\x77\xc4\x2f\x01\x97\x6a\x4c\x14\x87\x8b\x65\x9c\xac\xbf\x6e\xec\xf3\xfc\xdd\x02\xed\x76\x81\x01\xce\xe0\x98\x1a\x06\x09\x5a\xb8\x1e\xda\xd7\x1e\xda\xd4\x85\xb5\x0b\x28\x69\x9f\x96\x69\xdb\xa3\x0c\x3e\x5d\xff\x30\xbc\xda\x25\x55\x4b\x47\xa8\xab\x0c\xe6\x2e\x1e\xe9\xfe\x3f\xf9\x4d\x8a\x6a\x1b\xfc\xe9\x79\xbe\xd1\xd8\x7b\xa6\x9d\xf5\x35\x2e\xe8\xaa\xd4\x33\xa1\x74\x3f\x85\x7d\xe6\xd8\x05\x4f\x46\xc1\x4f\xe8\x08\x7d\x4d\x58\xd4\xeb\xbe\x8e\xb9\x10\xe5\xf1\x2a\xfa\xbf\x7b\x20\xdb\xd6\x31\x13\x55\x4d\x25\xfe\x41\xd5\xf2\x23\x2f\xf6\x2b\x19\x66\x4a\x52\xd8\xaf\x2f\x09\x1b\x08\x5b\xba\xff\x17\x00\x00\xff\xff\x7b\x87\xcf\xf2\xb3\x0d\x00\x00")

func serviceTplBytes() ([]byte, error) {
	return bindataRead(
		_serviceTpl,
		"service.tpl",
	)
}

func serviceTpl() (*asset, error) {
	bytes, err := serviceTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "service.tpl", size: 3507, mode: os.FileMode(420), modTime: time.Unix(1590456017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vueTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x6d\x6f\x1c\xb7\xf1\x7f\xaf\x4f\x31\x21\x9c\xe0\x2e\xb9\x5d\xc9\xf9\x23\xf8\x23\xab\xdb\x6b\x10\x25\x2d\x82\x16\x4d\x80\x26\xaf\x0c\x23\xa0\x76\x79\x77\xac\xb9\x0f\x25\x79\x27\x29\x87\x03\x8a\x36\x89\xed\xb4\x89\x5c\x34\x15\xd2\x3c\xc0\x76\xe1\xf4\x09\xb0\xe2\x17\x85\x6b\xc7\x4a\xfa\x65\x74\x27\xe7\x55\xbf\x42\x41\x72\xef\x96\xfb\x70\x27\xc9\x51\x82\x1a\x28\x60\x9c\x76\xc9\xe1\x70\x38\xfc\xcd\x8f\xc3\x59\x03\xb4\x9f\x70\x1c\xf8\x11\x89\x09\xc7\x92\x84\xb0\xb9\x03\x82\xe1\xe0\x12\xe1\x8e\xd3\x81\x95\xb6\x24\x51\xca\xb0\x24\x9d\x15\x80\x36\x61\x4e\x80\x79\xa8\x9e\x01\xda\x21\x1d\x82\x60\x89\xf4\x51\x9f\xe0\x90\x70\x64\xda\x8d\x5c\x37\xe1\x11\x78\x34\x66\x34\x26\x3e\x92\x7c\x40\x10\x0c\x9d\x28\x09\x09\xf3\x91\x20\x98\x07\x7d\x25\x82\xe0\x05\x31\xd8\x8c\xa8\x74\x63\x2c\xe9\x90\xb8\x29\x27\x43\x12\x4b\x1f\xc5\x49\x4c\xe6\x1a\x73\x9d\x0e\x95\x24\xca\x9b\x4d\x07\x8d\xd3\x81\x84\x94\x93\x2e\xdd\x76\x68\x90\xc4\x3e\x52\xad\x41\x12\x3b\x66\x2a\x04\x01\x23\x98\xe3\x4d\x46\x66\x56\xb8\x92\xd3\xc8\x36\xc5\xa5\x29\x82\x94\xe1\x80\xf4\x13\x16\x12\xee\xa3\xe9\xf5\xcf\xa7\x57\xbf\x9e\xbc\xfb\xce\x64\xff\x3e\xea\xb4\x57\x67\x33\x59\x56\xad\x16\xcc\x82\x93\x99\xbb\x39\x90\x32\x89\x41\xee\xa4\xc4\x47\x29\xa7\x11\xe6\x3b\x08\x5e\x08\x18\x0d\x2e\xf9\xe8\x67\x99\xc5\xb5\xeb\xe8\x4c\xaf\x7f\xfe\xf0\x8b\x3f\xe9\x79\x8d\x9a\x05\xca\x67\xda\x38\x11\x44\x5a\xfe\xee\x4c\xef\xbd\x73\xf4\xb7\x2f\x8d\x9a\xe9\x67\x37\x0f\x1f\xdc\xad\x55\x56\x5a\xd9\x4a\xa9\x75\xde\xa0\xd0\x53\x33\x2d\x8d\xd2\x84\xcb\x2e\x65\xc4\x1d\x52\x41\x37\x19\xf1\x0d\x06\x78\x32\x88\xc3\xf2\xd2\x03\x86\x85\xf0\x91\xc2\x56\xa6\x08\x75\xda\x74\xd6\x3c\x73\xc1\x20\x65\x09\x0e\x9f\x55\x3b\x41\x3b\x93\x2f\x0e\x26\xef\x7c\xfe\xf0\xe6\x5f\xa7\x37\x0e\xec\x05\x80\xe3\x1c\x67\xdb\xcb\xdb\xca\x36\x54\x36\xc2\x58\x76\x32\x53\xc2\x64\x2b\x56\xc6\xe4\xb6\x5c\xfe\x72\xb9\x2d\x55\x33\x02\x4e\xb0\x9c\xbb\x07\x7c\x30\x0e\x3a\xa9\x55\x25\x7c\xa4\x6c\x20\x50\x67\xfa\xcf\x07\x93\xf7\x6e\xd4\x6c\xa8\x09\x56\xb9\xc3\x88\x8f\x74\x28\x78\x9b\x89\xec\x2b\xf3\x43\x3a\xcc\xe2\xd9\x7a\x24\xcc\x91\x3a\x58\xbc\x10\x4b\xec\x23\xfd\xe2\xaa\x67\x34\xd3\xb2\x45\x43\xd9\xf7\xe0\xfc\xda\xda\x93\x2a\x88\x09\x23\x81\xa4\x49\xec\x04\x7d\x1c\xf7\x88\x82\x71\xd6\xb2\xa1\x1b\x54\xf4\x2b\x8f\xd1\xb8\x37\x53\x97\xbd\x16\x68\x43\xf7\x38\x41\xc2\x06\xd1\x2c\x40\xe6\xaa\x11\xe8\x39\x7d\xf4\xdc\x73\xa8\x00\x48\x7b\x50\x8e\xe0\xd1\x88\xab\x89\xe1\x1c\x6d\x9d\x0b\x12\xe6\xf9\xee\x86\x96\x10\xe3\xf1\xa2\x09\x19\xde\x54\xf4\x34\x1a\xa9\x01\xee\x06\x8e\x08\xdb\xc0\x82\xfc\x14\x47\x64\x3c\xb6\xc9\x68\xc6\x8a\x9a\xff\x1c\x11\x24\xda\x50\xf5\x07\x15\xe2\x51\xa4\x38\xee\x40\xbb\xdd\x06\xdd\xe9\xf2\x64\xcb\x9d\x69\xd7\x53\x1a\xd5\xd0\xe9\x74\xa0\xbd\xaa\xa5\xad\x08\xb4\xb9\xf7\x98\xc5\xc2\x68\x44\xe2\xf0\xd8\x95\x4d\x7f\xff\xfe\xe1\x57\x9f\x3e\xca\x4a\x72\xfc\x0a\xfa\x96\x12\x89\x30\x63\x15\xb4\xa6\x0c\xd3\x1c\xe1\xaf\xc6\x1b\xea\xe1\xe5\x90\xca\xc6\x7c\xfd\xcd\x32\x72\x49\x48\x25\xea\xc0\xf1\x94\x56\x33\x71\xa8\x76\x98\xe7\xdc\xf9\x12\x61\x44\x92\x25\x93\x85\x5a\x20\x23\xf3\x2a\xe7\x9d\xd0\xe3\x79\xb3\x7d\x14\x9a\xb8\x88\x30\xef\xd1\xd8\x61\xa4\x2b\x3d\x78\x76\x2d\xdd\x5e\xcf\x5a\x64\x92\x9a\x06\x54\x43\x0a\x43\x47\xf4\x93\x2d\x1f\x45\x03\x26\x69\xca\xc8\x3c\x7a\x5c\x46\xe2\x9e\xec\x57\x3c\x3d\x5b\xb1\xf6\xf0\x8b\x58\x06\xfd\xd7\xd4\x0f\xea\x4c\xaf\xde\xff\xe6\xf2\xee\xe1\xbf\xf6\xa7\x1f\xde\xaf\x23\x82\xd3\xcf\x59\x76\x72\x3e\xe5\x4b\x99\x37\xcd\x9c\x93\x2b\x37\xbe\xf9\xe3\xad\xca\x9c\x25\x5e\x49\x71\x8f\xaa\xb3\x3e\x89\xc1\xeb\xd3\x90\x38\xea\x70\xa3\x71\x8f\x11\xd5\x35\xcf\x15\x32\xc6\xcb\xa5\x11\x6c\xe2\xe0\x52\xcf\xf0\x21\xc3\x3b\xc9\x40\xfa\x48\x63\x42\xb4\x40\x26\x12\xb3\x96\xca\x00\x86\x2d\x50\x6a\x78\x0b\x62\xb2\x2d\x11\x78\xba\x6b\x46\x39\xfa\x05\x81\xa7\x44\x1c\x83\xa7\x8c\x8b\x68\x44\xa5\xdd\x21\x7c\x74\xe1\xfc\x5a\x0b\x9e\x5b\x6b\x29\x8e\x6b\xc1\xf3\xcf\x3f\x7f\x51\x11\x1d\x7d\x8b\xe4\x1c\x47\xdf\x22\x33\x7a\x33\xfe\xf5\x82\x01\xe7\x24\x96\xb3\xb5\x68\xe5\xea\x59\xb9\x2f\xeb\x9a\x8d\x7e\x0d\xf7\x66\xa3\x2d\x58\xe5\x2b\xee\xac\xcc\x9d\x16\x52\xcc\x92\x1e\x48\x2a\x15\xc4\x0c\xcb\x23\xf0\xb2\xb3\xc3\x15\x3b\x71\x50\x3e\x50\x72\xb6\x5c\x2b\x63\xce\xe4\x66\x59\x2e\x96\x8d\x32\xc9\x98\xa6\x09\x27\x4d\x04\x55\x06\xf8\x88\xd3\x5e\x5f\xce\x9a\x33\x7d\xe7\x0b\xfa\x4e\xc6\xb4\x99\x18\xed\x42\x9c\x48\xd0\xfc\xf7\x8a\x78\xcd\x60\xf9\xc7\x64\xc7\x92\x2b\x24\x4e\x27\x26\x64\x3b\x0d\x9c\xe5\x77\x7a\xba\x8d\x24\x96\x98\xc6\xc2\xcc\xf9\xfa\x4e\x4a\x00\xd1\x58\xa2\xf1\x38\x1e\x44\x9b\x84\x8f\x46\x84\x09\x32\x1e\xab\x64\x30\xa3\xd0\x82\x4b\xea\xd8\x1a\x01\x1e\xc8\xc4\x09\x92\x28\x55\xf0\xf7\x51\xd2\xed\x9e\x28\x3d\xb4\x9d\x51\x22\xec\x1a\x0a\xaf\xa4\x5a\x79\xbe\xdd\x4d\x12\xa9\x22\x32\x0b\x12\x83\x0e\x27\x6b\x2d\xe6\xcc\xc7\x25\x1d\x5d\xcc\x04\x41\x9d\xc9\xee\x1e\x4c\xef\x5e\xa9\xa7\xc5\x63\x53\xd6\x0d\xad\x15\x75\x8e\x6e\xee\xc3\x64\xff\xe3\x3a\xda\xb1\xf3\x8c\x39\xa0\x17\x22\xfc\xe8\x60\xef\xe1\xd7\xbf\xab\x20\x7c\x90\x86\x8f\x80\xf0\x6c\xd4\xa3\x22\xfc\x64\xe8\x7e\x6c\xc0\x6d\x79\xe3\xbb\x02\x77\x11\xc8\xdf\x07\xac\x8b\xc0\x38\x2b\x58\xbf\xa1\xb5\x9e\x21\xac\xed\xb3\xb9\x02\xee\x4d\x75\xa2\xa6\xea\xe7\xb4\x00\xb7\x46\x3e\x3a\x8d\x9f\x90\xc4\x1f\x1f\xa0\x97\xbc\xf2\xfd\x80\xfd\xfb\x81\x7b\x15\x2a\x67\x05\x79\x3b\x93\x3c\x3d\xec\xb3\x24\xa8\x06\xf8\xbb\xd7\x8e\x6e\x7d\xe9\x1d\xde\x7b\xef\xf0\xe0\xc6\xe4\xda\x07\x93\x3b\xef\x4e\x3f\xbc\x3f\xd9\xfd\x68\xf2\xc1\xf5\xe9\xa7\x57\xa7\x7f\xb8\x33\x7d\x7f\xbf\x12\x11\xd5\x22\xc2\x3c\x22\xfe\x6f\xed\xc9\x42\x3c\x98\xda\x00\x70\xd2\x55\x64\xa0\xaf\xe6\xe0\x59\xb7\xd1\x1f\x52\x36\xcf\xd4\x3c\xa5\xd1\x61\x54\xc8\xc2\x14\xea\x47\x35\x22\xf0\xfa\x52\xa6\x0e\x27\xbf\x18\x10\x25\xf3\x4a\x64\xea\x05\x9e\x06\x8b\xd1\xee\x23\xe3\x6e\x08\x39\xee\x01\x0e\x4c\x9c\xd9\xbb\xb6\xa0\x7c\x61\x2a\x06\xb9\x98\x82\x43\x2e\x68\x64\xde\x7c\x53\xaa\xdc\xb5\xa3\xbc\xb4\x77\xf9\xf0\xc1\xdd\xe9\x6f\xf6\x26\x57\xee\x4c\x6f\xdf\x9a\xdc\x7a\xfb\xdf\x07\xbf\x9d\x5e\xd9\x2b\xc4\x4c\xd4\x39\xfa\xd5\xfd\xc9\xe5\x07\xc6\xbd\xed\x55\x1b\xa0\xd6\x56\x2d\x9b\x8f\xa6\x28\x43\xa5\x7a\xec\x4c\x76\xff\xfe\xf0\xd7\x5f\x19\x7d\xee\x36\x13\xdb\xc6\x8e\x82\x32\xbd\xf3\x46\xc1\xbc\x49\xdd\x60\xbf\x35\xba\xab\xdb\x7e\x56\xe8\x36\xa5\xc6\x37\xb2\x8d\x58\x86\xef\xfc\x2a\x6e\x03\xdc\xe0\x7b\x25\x6b\x34\xa5\x50\xfb\xd2\xb8\xd2\x16\x01\xa7\xa9\xe6\x0d\xb3\x0a\x78\x1a\xb0\x00\x9c\x52\xe8\xf2\x24\x02\xf4\xc2\x2a\x4e\xe9\xea\x68\xe4\x66\x04\xb4\xbe\x02\x40\x74\x3d\x0a\x42\xd2\xc5\x03\x26\x61\xa4\x27\x09\xb1\xc4\x8d\x66\xf6\x02\xc0\x89\x1c\xf0\x78\xfe\x0a\x50\xb9\xb4\x79\x70\xe1\x62\x6b\xde\xad\x2f\x1e\x9e\x25\x0f\x90\x95\x5b\x3c\xe3\xca\x96\xd5\xa3\xe6\x2a\x0e\x07\x73\xa3\xf2\x60\xcd\x6e\x53\xf7\x18\x0f\xce\xdb\x4d\x49\xb7\x2b\x88\x2c\xc9\xe9\xcb\x94\x07\xe7\xd7\xe6\x6d\xe3\xbc\x3b\xaf\x45\x7a\x30\xb2\xda\x4d\x66\x5a\x34\xb9\x2a\x05\x90\x41\x22\x5b\x46\xdd\x0c\x26\x19\x38\x0b\x4d\x39\xcf\x9e\x85\xb6\x1c\xd7\x25\x6d\x19\xf1\x94\xb7\x60\x91\xc6\xec\x69\xbc\xbe\x62\x4d\x10\x11\xd9\x4f\x42\x91\x6b\xee\x11\x59\xc2\x10\x80\xec\x53\xe1\x16\x8a\x6f\x59\xd9\x71\x7d\x2e\x82\x53\x6a\x99\xe0\xfe\x84\x0a\xd9\x28\x9c\xff\xaf\x6e\xfe\x9c\x04\xd2\xc5\x42\xd0\x5e\x5c\xec\x02\x18\xcd\x01\x61\x4d\x65\x9a\x5a\x33\x58\xd8\x46\xa8\x16\x28\xb8\x71\x6e\x66\x8e\x93\x42\x6f\x73\xa5\xfe\xd9\x95\x7d\x12\x37\xb8\x48\xc1\xef\x14\xbc\x5b\x58\xb5\x46\x35\xf8\xc0\x45\xaa\xab\x99\xa6\x61\x7d\x91\xb8\x12\xb1\xa5\xd5\xcf\x42\xe1\xdc\xa3\x7a\xbf\x6c\xb9\x71\xc1\xd2\x40\x01\xaa\x41\x38\xd7\xa6\x8e\x9b\x33\xc9\xb9\x1f\xf2\xc2\x40\x63\x88\xd9\x82\x0d\xd4\x05\x86\x21\x66\x75\x7d\xc6\xe3\x6a\x6f\xcb\xbe\x7e\x1a\x94\x4a\x70\xe0\x7c\x73\xbd\x38\x72\x8e\x97\x8a\x39\x79\x95\x63\x89\x39\x46\xbd\x0f\x43\xdb\x9d\xc7\x28\xd6\xdf\x26\x4c\xdc\xab\x7d\xae\x42\xb5\xfe\xb6\xba\x5e\x2b\xa4\x33\x62\x1f\x46\xe3\xfa\x69\x72\x38\x55\xa7\xc9\xfb\x0a\x0a\xb2\x5e\xf3\x3d\xa6\xce\x2f\x59\xc7\x92\xfd\x39\xbf\x74\x77\xd6\x4e\xec\x29\x73\xc1\x2e\x4c\xc5\x88\x04\x2b\x88\xd5\xf8\x73\xd9\x7b\xa3\x48\xfb\xc1\x25\x4f\x07\x79\x81\xde\xc9\xb6\xf4\x20\xab\x07\x1f\xde\xbb\xed\xba\x2e\xb2\xfb\x45\x4a\xe3\x98\x70\x0f\xe6\xe9\xcb\xac\x5a\x6f\x4b\xe5\x15\x39\x0f\x10\xef\x6d\xe2\xc6\x5a\x0b\xb2\x7f\xee\xff\x37\x51\xce\x59\xcd\x85\x0c\x93\x2d\xad\xbc\x95\xa7\x89\xed\x0a\x8e\x6a\x62\xb4\xe2\x5b\x38\x36\x2e\x2b\x16\x34\x9a\x55\x03\x32\xb7\xb8\x01\x4b\x04\x29\x6b\xaf\xec\x63\x56\x9f\xe6\xc9\x56\x05\x35\xe7\x82\x24\xee\x52\x1e\x35\xd0\xf4\xf6\x2d\xb3\x2f\x93\x3b\xef\x9a\x9a\xaa\x6a\xf9\xec\xa6\xc9\x92\x5b\x30\xfd\xe8\x8b\xc9\xb5\x3f\x1f\x3d\xf8\xcb\xd1\x83\xdb\x3f\x40\x2d\xc8\xb2\x6b\xd4\x2a\x98\x96\xa9\x7b\x51\x27\x36\xaf\x9b\xed\x3e\xba\xb9\x3f\xd9\xff\xb8\xb0\x85\x01\x8e\x03\xc2\x0a\x52\x93\xdd\xbd\xe9\xdd\x2b\x05\x29\x95\x4f\x79\x80\xb6\x30\x8f\x15\x06\x56\xea\x1d\xb8\xd0\x49\xc5\x2d\xd7\xb2\xb9\x27\xdc\xd1\xc8\xcd\x2f\x91\xe6\x7a\x56\xb8\xa5\x35\xcb\x63\x17\xc3\x21\xf7\x66\x9c\x48\xda\xdd\x71\xc5\x20\x08\x88\x10\x0d\x94\x39\xf2\xca\xb5\xc9\x7b\xd7\x51\x09\x20\xb0\x14\x24\x95\x75\xc2\x32\x12\xaf\x7a\xe5\x58\xba\x37\x65\x86\x42\x70\x97\x62\x24\x93\xd0\x36\x16\xeb\x37\xcb\x3d\xd7\x82\xf2\x90\xd3\x84\x55\x7d\x51\xa5\x26\xb6\x2a\xce\x9e\x7e\xf2\x8f\xe9\xde\x9d\x7a\x67\x3f\x6a\x34\x56\xdc\x66\x7f\x5d\x52\x01\x65\xad\xa0\xbc\x6a\xf0\x4b\x69\xcb\x68\xdc\x02\x35\xa6\xc6\xb4\xca\xaa\xed\xfc\xc8\xe2\xfe\xc2\xd7\xcd\xda\x83\xb1\x92\xa2\x17\x8f\xc7\x9c\xdc\x4b\xdf\x53\xaa\x27\x8a\xc5\x0d\xd6\x97\x96\x6f\x7e\x79\xf5\xf0\xde\xed\xa3\x8f\xdf\x9e\x7e\x76\xf3\xe8\x93\xc7\x92\x18\xf4\xea\x0a\x4b\x3f\x0e\x10\x99\x96\x1a\x3c\x2c\xf2\xe0\x63\x7b\x50\x2a\xc3\x69\x28\xc0\x87\x0b\x17\xf3\xd6\x6e\xc2\xa1\xa1\xbb\xe2\x90\x6c\xeb\x2c\x22\x7b\x6c\x2f\x80\x5d\xf6\x39\x2f\x13\x7b\xe6\x99\x66\x19\x0e\x42\x82\xae\xd3\xf9\x0b\x14\x5c\xd0\x03\x2f\xda\x5b\x43\x43\xe1\xa6\x03\xd1\x6f\xa8\x81\xc7\x33\xf8\x7a\xe5\xf6\x52\xe1\x38\x7b\xfb\x46\x70\x9c\x46\x4f\x39\xa6\x06\x64\x8b\xd9\xec\x54\x27\xc2\x7f\x51\xca\x50\xfa\xc0\x5b\x25\x87\x52\x9d\xb3\x2e\x85\xad\xad\x17\xd6\xf2\xda\x82\x89\xfe\x17\x43\x8f\x4f\x0c\x99\xdd\x83\x93\xc6\x50\xab\x16\x45\xdf\x2a\xb2\xcc\x07\x8e\xd3\x46\xd6\x32\xac\x9e\xf2\x46\xfd\x1d\x84\xa1\xf9\x4f\x63\xe5\x24\xcd\x9d\x35\x57\xe4\x4d\xd1\x58\x6f\xad\x3d\x66\x88\xb9\x3e\x33\xc1\xb7\xa6\x43\x38\x4d\x19\x0d\xf4\x47\xff\xd5\x61\x1c\xba\x49\x4a\xe2\xed\x88\xa9\x8d\xc0\x52\x38\x49\xb7\x4b\x03\x12\x26\xc1\x20\x22\xb1\x74\x45\xca\x09\x0e\x45\x9f\x10\x19\x31\x57\xff\x45\xb9\xf5\xb4\x0b\x76\x55\x46\x63\x4b\xd7\x52\xf5\xb4\x4f\xf8\xbe\x99\xff\xa9\xa7\x96\x0b\x15\x6c\xda\x4a\x67\x46\xe8\x62\x70\x1e\x6a\xc5\x30\x30\x68\x88\x88\x10\xb8\x47\x5c\xc2\x79\xc2\x1b\xc8\x2e\x25\xeb\x4a\xf2\x8d\x83\xc9\xc1\x6e\x11\x16\xa6\xba\x59\x07\xf0\x93\x50\x4d\x21\xf0\x17\x85\x86\xb5\x1f\x7a\xa5\xdf\xee\xe8\xd0\xff\xf9\x70\x09\xc0\x17\x97\xb0\xcf\x18\xc4\x45\xff\x34\xeb\xc0\xbc\xfc\x34\xab\x00\xd7\xae\x91\xd7\x64\xa2\x9c\x74\x55\x8e\xac\x7a\x5d\x23\x5a\x03\xfe\xfc\x6b\x4b\x43\xf9\xa0\x05\x8c\x0a\x59\xd1\x55\xf3\xed\x45\xf1\xb4\xfa\xeb\xa6\x49\xda\x68\x5e\xac\x28\x8e\x93\x98\x34\x9a\x23\x83\x8f\x71\xcb\xd4\xe3\xcd\xcd\xdf\x36\xb6\xb4\x60\x23\xa6\x06\x8d\xd7\x57\xda\xab\xb3\x1a\xfd\x0a\xfc\x27\x00\x00\xff\xff\xea\x47\x7d\x3c\xfe\x2c\x00\x00")

func vueTplBytes() ([]byte, error) {
	return bindataRead(
		_vueTpl,
		"vue.tpl",
	)
}

func vueTpl() (*asset, error) {
	bytes, err := vueTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vue.tpl", size: 11518, mode: os.FileMode(420), modTime: time.Unix(1577779184, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"component.tpl":   componentTpl,
	"controllers.tpl": controllersTpl,
	"dao.tpl":         daoTpl,
	"js.tpl":          jsTpl,
	"markdown.tpl":    markdownTpl,
	"models.tpl":      modelsTpl,
	"service.tpl":     serviceTpl,
	"vue.tpl":         vueTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"component.tpl":   &bintree{componentTpl, map[string]*bintree{}},
	"controllers.tpl": &bintree{controllersTpl, map[string]*bintree{}},
	"dao.tpl":         &bintree{daoTpl, map[string]*bintree{}},
	"js.tpl":          &bintree{jsTpl, map[string]*bintree{}},
	"markdown.tpl":    &bintree{markdownTpl, map[string]*bintree{}},
	"models.tpl":      &bintree{modelsTpl, map[string]*bintree{}},
	"service.tpl":     &bintree{serviceTpl, map[string]*bintree{}},
	"vue.tpl":         &bintree{vueTpl, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
